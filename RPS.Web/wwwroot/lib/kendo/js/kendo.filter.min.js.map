{"version":3,"sources":["kendo.filter.js"],"names":["f","define","editors","number","string","boolean","date","operatorsTemplate","logicTemplate","mainContainer","mainLogicTemplate","logicItemTemplate","expressionItemTemplate","$","findCustomOperators","operators","field","operator","handler","findModel","model","uid","i","temp","filters","length","kendo","window","ui","Widget","ButtonGroup","CHANGE","NS","EQ","NEQ","proxy","FilterButtonGroup","extend","init","element","options","that","this","fn","call","name","value","undefined","_value","select","wrapper","find","trigger","button","attr","Filter","html","addClass","dataSource","_getFieldsInfo","_modelChangeHandler","_modelChange","_renderMain","expression","_addExpressionTree","filterModel","_renderApplyButton","expressionPreview","_previewContainer","insertAfter","children","eq","_createPreview","toJSON","_attachEvents","hasCustomOperators","events","applyButton","fields","mainLogic","messages","and","or","apply","close","addExpression","addGroup","neq","startswith","contains","doesnotcontain","endswith","isnull","isnotnull","isempty","isnotempty","isnullorempty","isnotnullorempty","gte","gt","lte","lt","applyFilter","filter","_hasCustomOperators","_mapOperators","_hasFieldsFilter","_removeEmptyGroups","destroy","off","_applyButton","setOptions","deepExtend","empty","getOptions","result","parent","logic","_addGroup","_addExpression","on","e","icon","command","preventDefault","currentTarget","split","pop","_removeExpression","closest","parentContainer","expressionModel","parentUID","itemsContainer","next","_fields","_defaultField","itemHTML","set","_addNewModel","appendTo","template","type","fieldsLabel","ns","_addExpressionControls","_expressionChange","container","items","operatorsContainer","editorContainer","_appendOperators","_appendEditor","_bindModel","_showHideEditor","operatorsLabel","isFunction","editor","Object","keys","push","defaultValue","logicHTML","bind","current","createdField","haveFields","childhtml","toLocaleUpperCase","label","_getOperatorText","indexOf","htmlEncode","previewFormat","toString","text","_addField","fieldInfo","editorTemplate","fieldsCollection","schema","Array","isArray","haveField","splice","newField","sender","unbind","remove","observable","parentModel","itemContainer","isMain","hasClass","siblings","format","hide","show","forEach","plugin","jQuery","amd","a1","a2","a3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,gBACH,aACA,qBACDD,IACL,WAAA,GAUME,IACAC,OAAU,sGACVC,OAAU,wFACVC,UAAW,kGACXC,KAAQ,mGAERC,EAAoB,gNACpBC,EAAgB,wJAChBC,EAAgB,4EAChBC,EAAoB,uGAA2HF,EAAgB,kxBAC/JG,EAAoB,qHAA8IH,EAAgB,uxBAClLI,EAAyB,+wBAyiB7B,OAxiBC,UAAUC,GA+gBP,QAASC,GAAoBC,GAA7B,GACaC,GACDC,CADR,KAASD,IAASD,GAEd,GADIE,EAAWF,EAAUC,GACrBC,EAASC,SAAuC,kBAArBD,GAASC,SAA8C,gBAAbD,IAAsC,OAAbA,GAAqBH,EAAoBG,GACvI,OAAO,CAGf,QAAO,EAEX,QAASE,GAAUC,EAAOC,GAA1B,GAKiBC,GACDC,CALZ,IAAIH,EAAMC,MAAQA,EACd,MAAOD,EAEX,IAAIA,EAAMI,QACN,IAASF,EAAI,EAAGA,EAAIF,EAAMI,QAAQC,OAAQH,IAEtC,GADIC,EAAOJ,EAAUC,EAAMI,QAAQF,GAAID,GAEnC,MAAOE,GAhiB1B,GACOG,GAAQC,OAAOD,MAAOE,EAAKF,EAAME,GAAIC,EAASD,EAAGC,OAAQC,EAAcF,EAAGE,YAAaC,EAAS,SAAUC,EAAK,eAAgBC,EAAK,cAAeC,EAAM,kBAAmBC,EAAQtB,EAAEsB,MACtLC,EAAoBN,EAAYO,QAChCC,KAAM,SAAUC,EAASC,GACrB,GAAIC,GAAOC,IACXZ,GAAYa,GAAGL,KAAKM,KAAKH,EAAMF,EAASC,IAE5CA,SAAWK,KAAM,qBACjBC,MAAO,SAAUA,GACb,MAAcC,UAAVD,EACOJ,KAAKM,QAEhBN,KAAKM,OAASF,EACdhB,EAAYa,GAAGM,OAAOL,KAAKF,KAAMA,KAAKQ,QAAQC,KAAK,WAAcL,EAAQ,MAAO,QAChFJ,MAAKU,QAAQrB,KAEjBkB,OAAQ,SAAUI,GACVA,QACAX,KAAKI,MAAMjC,EAAEwC,GAAQC,KAAK,aAIlCC,EAAS1B,EAAOQ,QAChBC,KAAM,SAAUC,EAASC,GAAnB,GAEEgB,GADAf,EAAOC,IAEXb,GAAOc,GAAGL,KAAKM,KAAKH,EAAMF,EAASC,GACnCC,EAAKF,QAAU1B,EAAE0B,GAASkB,SAAS,qBACnChB,EAAKiB,WAAalB,EAAQkB,WAC1BjB,EAAK1B,UAAYF,EAAEwB,OAAOI,EAAKD,QAAQzB,UAAWyB,EAAQzB,WAC1D0B,EAAKkB,iBACLlB,EAAKmB,oBAAsBzB,EAAMM,EAAKoB,aAAcpB,GACpDA,EAAKqB,cACDtB,EAAQuB,YACRtB,EAAKuB,mBAAmBvB,EAAKwB,aAEjCxB,EAAKyB,qBACDzB,EAAKD,QAAQ2B,oBACR1B,EAAK2B,oBACN3B,EAAK2B,kBAAoBvD,EAAE,wCAAwCwD,YAAY5B,EAAKF,QAAQ+B,WAAWC,GAAG,KAE9Gf,EAAOf,EAAK+B,eAAe/B,EAAKwB,YAAYQ,UAC5ChC,EAAK2B,kBAAkBZ,KAAKA,IAEhCf,EAAKiC,gBACLjC,EAAKkC,sBAETC,QAAS7C,GACTS,SACIK,KAAM,SACNa,WAAY,KACZK,WAAY,KACZc,aAAa,EACbC,UACAC,UAAW,MACXC,UACIC,IAAK,MACLC,GAAI,KACJC,MAAO,QACPC,MAAO,QACPC,cAAe,iBACfP,OAAQ,SACR/D,UAAW,YACXuE,SAAU,aAEdvE,WACIX,QACImE,GAAItC,EACJsD,IAAKrD,EACLsD,WAAY,cACZC,SAAU,WACVC,eAAgB,mBAChBC,SAAU,YACVC,OAAQ,UACRC,UAAW,cACXC,QAAS,WACTC,WAAY,eACZC,cAAe,eACfC,iBAAkB,aAEtB9F,QACIoE,GAAItC,EACJsD,IAAKrD,EACLgE,IAAK,8BACLC,GAAI,kBACJC,IAAK,2BACLC,GAAI,eACJT,OAAQ,UACRC,UAAW,eAEfvF,MACIiE,GAAItC,EACJsD,IAAKrD,EACLgE,IAAK,uBACLC,GAAI,WACJC,IAAK,wBACLC,GAAI,YACJT,OAAQ,UACRC,UAAW,eAEfxF,WACIkE,GAAItC,EACJsD,IAAKrD,KAIjBoE,YAAa,WACT,GAAIC,GAAS7D,KAAKuB,YAAYQ,QAC1B/B,MAAK8D,qBACL9D,KAAK+D,cAAcF,GAEnB7D,KAAKgE,iBAAiBH,EAAO/E,cAC7BkB,KAAKiE,mBAAmBJ,EAAO/E,SAC/BkB,KAAKgB,WAAW6C,OAAOA,IAEvB7D,KAAKgB,WAAW6C,YAGxBK,QAAS,WACLlE,KAAKH,QAAQsE,IAAI7E,GACjBN,EAAMkF,QAAQlE,KAAKH,QAAQY,KAAK,yBAChCT,KAAK0B,kBAAoB,KACzB1B,KAAKoE,aAAe,KACpBpE,KAAKkB,oBAAsB,KAC3B/B,EAAOc,GAAGiE,QAAQhE,KAAKF,OAE3BqE,WAAY,SAAUvE,GAClBd,EAAMsF,WAAWtE,KAAKF,QAASA,GAC/BE,KAAKkE,UACLlE,KAAKH,QAAQ0E,QACbvE,KAAKJ,KAAKI,KAAKH,QAASG,KAAKF,UAEjC0E,WAAY,WACR,GAAIC,GAAStG,EAAEwB,QAAO,KAAUK,KAAKF,QAGrC,cAFO2E,GAAOzD,WACdyD,EAAOpD,WAAarB,KAAKuB,YAAYQ,SAC9B0C,GAEXnD,mBAAoB,SAAU5C,GAAV,GAERgG,GACK9F,CAFb,IAAIF,EAAMI,QAEN,IADI4F,EAAS1E,KAAKH,QAAQY,KAAK,OAAS/B,EAAMC,IAAM,KAC3CC,EAAI,EAAGA,EAAIF,EAAMI,QAAQC,OAAQH,IAClCF,EAAMI,QAAQF,GAAG+F,MACjB3E,KAAK4E,UAAUF,EAAQhG,EAAMI,QAAQF,IAErCoB,KAAK6E,eAAeH,EAAQhG,EAAMI,QAAQF,IAE1CF,EAAMI,QAAQF,GAAGE,SACjBkB,KAAKsB,mBAAmB5C,EAAMI,QAAQF,KAKtDoD,cAAe,WACX,GAAIjC,GAAOC,IACXD,GAAKF,QAAQiF,GAAG,QAAUxF,EAAI,kBAAmB,SAAUyF,GAAV,GAEzCpE,GACAqE,EACAC,CAHJF,GAAEG,iBACEvE,EAASxC,EAAE4G,EAAEI,eACbH,EAAOrE,EAAOF,KAAK,QACnBwE,GAAWD,EAAKjG,OAASiG,EAAOrE,GAAQC,KAAK,SAASwE,MAAM,KAAKC,MACtD,SAAXJ,EACAlF,EAAKuF,kBAAkB3E,EAAO4E,QAAQ,eACpB,cAAXN,EACPlF,EAAK8E,eAAelE,EAAO4E,QAAQ,eACjB,SAAXN,EACPlF,EAAK6E,UAAUjE,EAAO4E,QAAQ,eACZ,SAAXN,GACPlF,EAAK6D,iBAIjBiB,eAAgB,SAAUW,EAAiB9G,GAA3B,GAKR+G,GAJA1F,EAAOC,KACP0F,EAAYF,EAAgB5E,KAAK,MACjC+E,EAAiBH,EAAgBD,QAAQ,qBAAqBK,KAAK,qBACnEtH,EAAQI,EAAQqB,EAAK8F,QAAQnH,EAAMJ,OAASyB,EAAK+F,cAEjDC,EAAW,EACXrH,GACA+G,EAAkB/G,GAElB+G,EAAkBhH,EAAUsB,EAAKwB,YAAamE,GACzCD,EAAgB3G,SACjB2G,EAAgBO,IAAI,cAExBP,EAAkB1F,EAAKkG,aAAaR,EAAgB3G,QAASR,IAE5DqH,EAAe5G,SAChB4G,EAAiBxH,EAAE,oCAAsC+H,SAASV,EAAgBD,QAAQ,QAE9FQ,EAAW5H,EAAEa,EAAMmH,SAASjI,IACxBkE,OAAQrC,EAAK8F,QACbxH,UAAW0B,EAAK1B,UAAUC,EAAM8H,MAChC1D,MAAO3C,EAAKD,QAAQwC,SAASI,MAC7B2D,YAAatG,EAAKD,QAAQwC,SAASF,OACnCzD,IAAK8G,EAAgB9G,IACrB2H,GAAItH,EAAMsH,MACVJ,SAASP,GACb5F,EAAKwG,uBAAuBR,EAAStF,KAAK,cAAenC,EAAOmH,GAC3D/G,GACDqB,EAAKyG,qBAGbD,uBAAwB,SAAUE,EAAWnI,EAAOiD,GAA5B,GAChBmF,GAAQD,EAAUhG,KAAK,0BACvBkG,EAAqBD,EAAM7E,GAAG,GAC9B+E,EAAkBF,EAAM7E,GAAG,EAC/B7C,GAAMkF,QAAQyC,GACd3H,EAAMkF,QAAQ0C,GACdD,EAAmBpC,QACnBqC,EAAgBrC,QAChBvE,KAAK6G,iBAAiBF,EAAoBrI,GAC1C0B,KAAK8G,cAAcF,EAAiBtI,GACpC0B,KAAK+G,WAAWN,EAAWlF,GAC3BvB,KAAKgH,gBAAgBP,EAAWlF,IAEpCsF,iBAAkB,SAAUJ,EAAWnI,GACnCH,EAAEa,EAAMmH,SAAStI,IACbQ,UAAWC,EAAMD,WAAaC,EAAMD,UAAUC,EAAM8H,MAAQ9H,EAAMD,UAAUC,EAAM8H,MAAQpG,KAAK3B,UAAUC,EAAM8H,MAC/Ga,eAAgBjH,KAAKF,QAAQwC,SAASjE,UACtCiI,GAAItH,EAAMsH,MACVJ,SAASO,IAEjBK,cAAe,SAAUL,EAAWnI,GAC5BU,EAAMkI,WAAW5I,EAAM6I,QACvB7I,EAAM6I,OAAOV,EAAWtI,EAAEwB,QAAO,MAAYrB,MAAOA,EAAM6B,QAE1DhC,EAAEa,EAAMmH,SAAS7H,EAAM6I,SACnBb,GAAItH,EAAMsH,GACVhI,MAAOA,EAAM6B,QACb+F,SAASO,IAGrBR,aAAc,SAAUvB,EAAQpG,GAAlB,GACNiD,GAGAhD,EAFA6H,EAAO9H,EAAM8H,KACb/H,EAAYC,EAAMD,SAUtB,OARKA,KACDA,EAAY2B,KAAKF,QAAQzB,WAE7BE,EAAW6I,OAAOC,KAAKhJ,EAAU+H,IAAO,GACxC1B,EAAO4C,MAAOhJ,MAAOA,EAAM6B,OAC3BoB,EAAcmD,EAAOA,EAAO3F,OAAS,GACrCwC,EAAYyE,IAAI,QAAS1H,EAAMiJ,cAC/BhG,EAAYyE,IAAI,WAAYzH,GACrBgD,GAEXqD,UAAW,SAAUF,EAAQhG,GAAlB,GAKH8I,GAJAzH,EAAOC,KACPuB,EAAcxB,EAAKwB,YACnBmE,EAAYhB,EAAO9D,KAAK,MACxB+E,EAAiBjB,EAAOa,QAAQ,qBAAqBK,KAAK,oBAE1DlH,GACA6C,EAAc7C,GAEd6C,EAAc9C,EAAU8C,EAAamE,GAChCnE,EAAYzC,SACbyC,EAAYyE,IAAI,cAEpBzE,EAAYzC,QAAQwI,MAAO3C,MAAO5E,EAAKD,QAAQuC,YAC/Cd,EAAcA,EAAYzC,QAAQyC,EAAYzC,QAAQC,OAAS,IAE9D4G,EAAe5G,SAChB4G,EAAiBxH,EAAE,oCAAsC+H,SAASxB,EAAOa,QAAQ,QAErFiC,EAAYrJ,EAAEa,EAAMmH,SAASlI,IACzBI,WACIkE,IAAKxC,EAAKD,QAAQwC,SAASC,IAC3BC,GAAIzC,EAAKD,QAAQwC,SAASE,IAE9BG,cAAe5C,EAAKD,QAAQwC,SAASK,cACrCC,SAAU7C,EAAKD,QAAQwC,SAASM,SAChCF,MAAO3C,EAAKD,QAAQwC,SAASI,MAC7B4D,GAAItH,EAAMsH,MACVJ,SAASP,GACb5F,EAAKgH,WAAWS,EAAU/G,KAAK,cAAec,GACzC7C,GACDqB,EAAKyG,qBAGbO,WAAY,SAAUN,EAAW/H,GAC7B+H,EAAU7F,KAAK,KAAMlC,EAAMC,KAC3BD,EAAM+I,KAAK,SAAUzH,KAAKkB,qBAC1BlC,EAAMyI,KAAKhB,EAAW/H,GACtB+H,EAAU/B,SAAS9D,KAAK5B,EAAM4B,KAAK,SAAS,IAEhDkB,eAAgB,SAAU+B,GAAV,GAKR6D,GACApJ,EAKKM,EAVLkC,EAAO,GACP6G,GAAe,EACfC,EAAa5H,KAAKgE,iBAAiBH,EAAO/E,aAC1C+I,EAAY,EAGhB,KAAKhE,EAAO/E,UAAY+E,EAAO/E,QAAQC,SAAW6I,EAC9C,MAAO,EAGX,KADA9G,GAAQ,kDACClC,EAAI,EAAGA,EAAIiF,EAAO/E,QAAQC,OAAQH,IACvC8I,EAAU7D,EAAO/E,QAAQF,GACrB8I,EAAQ5I,UACR+I,EAAY7H,KAAK8B,eAAe4F,GAC5BG,IACIF,IACA7G,GAAQ,4CAA8C+C,EAAOc,MAAMmD,oBAAsB,YAE7FH,GAAe,GAEnB7G,GAAQ+G,GAERH,EAAQpJ,QACRA,EAAQ0B,KAAK6F,QAAQ6B,EAAQpJ,OACzBqJ,IACA7G,GAAQ,4CAA8C+C,EAAOc,MAAMmD,oBAAsB,YAE7FH,GAAe,EACf7G,GAAQ,wCAA0CxC,EAAMyJ,MAAQ,UAChEjH,GAAQ,4CAA8Cd,KAAKgI,iBAAiBN,EAAQpJ,MAAOoJ,EAAQnJ,UAC/FmJ,EAAQnJ,SAAS0J,QAAQ,MAAQ,GACjCnH,GAAQ,WACRA,GAAQ,yCAA8C9B,EAAMkJ,WAAW5J,EAAM6J,cAAgBnJ,EAAMoJ,SAASV,EAAQtH,MAAO9B,EAAM6J,eAAiBT,EAAQtH,OAAS,YAEnKU,GAAQ,UAKpB,OADAA,IAAQ,mDAGZ0F,kBAAmB,WAAA,GACXzG,GAAOC,KACP6D,EAAS9D,EAAKwB,YAAYQ,SAC1BjB,EAAO,EACPf,GAAKD,QAAQ2B,oBACbX,EAAOf,EAAK+B,eAAe+B,GAC3B9D,EAAK2B,kBAAkBZ,KAAKA,IAEhCf,EAAKW,QAAQrB,GAAUgC,WAAYwC,KAEvCmE,iBAAkB,SAAU1J,EAAOC,GAAjB,GACV6H,GAAOpG,KAAK6F,QAAQvH,GAAO8H,KAC3B/H,EAAY2B,KAAK6F,QAAQvH,GAAOD,SAIpC,OAHKA,KACDA,EAAY2B,KAAKF,QAAQzB,WAEtBA,EAAU+H,GAAM7H,GAAU8J,MAAQhK,EAAU+H,GAAM7H,IAE7D+J,UAAW,SAAUC,EAAWjK,GAC5B,GAAIyB,GAAOC,IACXuI,GAAYpK,EAAEwB,QAAO,MACjBQ,KAAMoI,EAAUpI,MAAQ7B,EACxB6I,OAAQoB,EAAUC,gBAAkBhL,EAAQ+K,EAAUnC,MAAQ,UAC9DmB,aAAcgB,EAAUhB,cAAgBgB,EAAUhB,gBAAiB,GAAoC,IAA3BgB,EAAUhB,aAAqBgB,EAAUhB,aAAe,GACpInB,KAAMmC,EAAUnC,MAAQ,SACxB2B,MAAOQ,EAAUR,OAASQ,EAAUpI,MAAQ7B,EAC5CD,UAAWkK,EAAUlK,UACrB8J,cAAeI,EAAUJ,gBAE7BpI,EAAK8F,QAAQ0C,EAAUpI,MAAQoI,EAC1BxI,EAAK+F,gBACN/F,EAAK+F,cAAgByC,IAG7BtH,eAAgB,WAAA,GAGRsH,GAGS3J,EAKAN,EAVTyB,EAAOC,KACPyI,EAAmB1I,EAAKD,QAAQsC,OAAOrD,OAASgB,EAAKD,QAAQsC,QAAUrC,EAAKD,QAAQkB,WAAWlB,QAAQ4I,OAAOhK,WAAa0D,MAG/H,IADArC,EAAK8F,WACD8C,MAAMC,QAAQH,GACd,IAAS7J,EAAI,EAAGA,EAAI6J,EAAiB1J,OAAQH,IACzC2J,EAAYE,EAAiB7J,GAC7BmB,EAAKuI,UAAUC,OAGnB,KAASjK,IAASmK,GACdF,EAAYE,EAAiBnK,GAC7ByB,EAAKuI,UAAUC,EAAWjK,IAItC0F,iBAAkB,SAAUlF,EAAS+J,GACjCA,IAAcA,CACd,KAAK,GAAIjK,GAAI,EAAGA,EAAIE,EAAQC,OAAQH,IAIhC,GAHIE,EAAQF,GAAGE,UACX+J,EAAY7I,KAAKgE,iBAAiBlF,EAAQF,GAAGE,QAAS+J,IAEtD/J,EAAQF,GAAGN,MACX,OAAO,CAGf,OAAOuK,IAEX5E,mBAAoB,SAAUnF,GAC1B,GAAKA,EAGL,IAAK,GAAIF,GAAIE,EAAQC,OAAS,EAAGH,GAAK,EAAGA,IACjCE,EAAQF,GAAG+F,QAAU7F,EAAQF,GAAGE,SAAWA,EAAQF,GAAGE,UAAYkB,KAAKgE,iBAAiBlF,EAAQF,GAAGE,SACnGA,EAAQgK,OAAOlK,EAAG,GAGlBE,EAAQF,GAAGE,SACXkB,KAAKiE,mBAAmBnF,EAAQF,GAAGE,UAI/CqC,aAAc,SAAU4D,GAAV,GAUNgE,GACArE,EACApG,EACAiD,EAZAxB,EAAOC,KACPyG,EAAY1G,EAAKF,QAAQY,KAAK,OAASsE,EAAEiE,OAAOrK,IAAM,IAE1D,OADAoB,GAAKiH,gBAAgBP,EAAW1B,EAAEiE,QAClB,UAAZjE,EAAEzG,WACc,YAAZyG,EAAEzG,OACFyB,EAAKyG,sBAITuC,EAAWhE,EAAEiE,OAAO1K,MACpBoG,EAASK,EAAEiE,OAAOtE,SAClBpG,EAAQyB,EAAK8F,QAAQkD,GACrBxH,EAAcxB,EAAKkG,aAAavB,EAAQpG,GAC5CyG,EAAEiE,OAAOC,OAAO,SAAUlJ,EAAKmB,qBAC/BwD,EAAOwE,OAAOnE,EAAEiE,QAChBjJ,EAAKwG,uBAAuBE,EAAWnI,EAAOiD,OAC9CxB,GAAKyG,sBAETpF,YAAa,WACT,GAAIrB,GAAOC,IACX7B,GAAEJ,GAAemI,SAASnG,EAAKF,SAE3BE,EAAKwB,YAAcvC,EAAMmK,WADzBpJ,EAAKD,QAAQuB,WACuBtB,EAAKD,QAAQuB,YAEXsD,MAAO5E,EAAKD,QAAQuC,YAE9DlE,EAAEa,EAAMmH,SAASnI,IACbK,WACIkE,IAAKxC,EAAKD,QAAQwC,SAASC,IAC3BC,GAAIzC,EAAKD,QAAQwC,SAASE,IAE9BG,cAAe5C,EAAKD,QAAQwC,SAASK,cACrCC,SAAU7C,EAAKD,QAAQwC,SAASM,SAChCF,MAAO3C,EAAKD,QAAQwC,SAASI,MAC7B/D,IAAKoB,EAAKwB,YAAY5C,IACtB2H,GAAItH,EAAMsH,MACVJ,SAASnG,EAAKF,QAAQY,KAAK,aAC/BV,EAAKgH,WAAWhH,EAAKF,QAAQY,KAAK,oBAAqBV,EAAKwB,cAEhE+D,kBAAmB,SAAUZ,GAAV,GAKX0E,GACA1K,EALAqB,EAAOC,KACP0F,EAAYhB,EAAO9D,KAAK,MACxByI,EAAgB3E,EAAOa,QAAQ,MAC/B+D,EAASD,EAAcE,SAAS,sBAGhCD,IACAD,EAAgBA,EAAc5I,KAAK,mBAC/BV,EAAKwB,YAAYzC,UACjBiB,EAAKwB,YAAYzC,QAAQyF,cAClBxE,GAAKwB,YAAYzC,WAG5BJ,EAAQD,EAAUsB,EAAKwB,YAAamE,GACpC0D,EAAc1K,EAAMgG,SACpBhG,EAAMuK,OAAO,SAAUlJ,EAAKmB,qBAC5BkI,EAAYF,OAAOxK,GACd0K,EAAYrK,cACNqK,GAAY1E,SAAS5F,QAE3BuK,EAAcG,WAAWzK,SAC1BsK,EAAgBA,EAAc3E,WAGtC1F,EAAMkF,QAAQmF,GACdA,EAAcH,SACdnJ,EAAKyG,qBAEThF,mBAAoB,WAChB,GAAIzB,GAAOC,IACND,GAAKD,QAAQqC,cAGbpC,EAAKqE,eACNrE,EAAKqE,aAAejG,EAAEa,EAAMyK,OAAO,kGAAmG1J,EAAKD,QAAQwC,SAASG,QAAQyD,SAASnG,EAAKF,YAG1LmH,gBAAiB,SAAUP,EAAW/H,GAArB,GAITH,GACAqI,CAJAlI,GAAMiG,QAGNpG,EAAWG,EAAMH,SACjBqI,EAAkBH,EAAUhG,KAAK,gCACrB,UAAZlC,GAAoC,aAAZA,GAAuC,WAAZA,GAAqC,cAAZA,GAAwC,iBAAZA,GAA2C,oBAAZA,EACvIqI,EAAgB8C,OAEhB9C,EAAgB+C,SAGxB5F,cAAe,SAAU1C,GACrB,GAAItB,GAAOC,IACPqB,GAAWvC,SACXuC,EAAWvC,QAAQ8K,QAAQ,SAAU/F,GAAV,GAIftF,GACAD,EACA8H,CALJvC,GAAO/E,QACPiB,EAAKgE,cAAcF,IAGfvF,EAAQyB,EAAK8F,QAAQhC,EAAOvF,OAC5B8H,EAAO9H,EAAM8H,KAEb7H,EADAD,EAAMD,WAAaC,EAAMD,UAAU+H,GAAMvC,EAAOtF,UACrCD,EAAMD,UAAU+H,GAAMvC,EAAOtF,UAE7BwB,EAAK1B,UAAU+H,GAAMvC,EAAOtF,UAEvCA,IACAsF,EAAOtF,SAAWA,EAASC,SAAWqF,EAAOtF,cAMjE0D,mBAAoB,WAAA,GAEP3D,GADLD,EAAYF,EAAEwB,QAAO,KAAUK,KAAK3B,UACxC,KAASC,IAAS0B,MAAK6F,QACnBxH,EAAYF,EAAEwB,QAAO,KAAUtB,EAAW2B,KAAK6F,QAAQvH,GAAOD,UAElE2B,MAAK8D,oBAAsB1F,EAAoBC,KAyBvDa,GAAG2K,OAAOhJ,GACV3B,EAAG2K,OAAOnK,IACZT,OAAOD,MAAM8K,QACR7K,OAAOD,OACE,kBAAVzB,SAAwBA,OAAOwM,IAAMxM,OAAS,SAAUyM,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.filter.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.filter', [\n        'kendo.core',\n        'kendo.buttongroup'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'filter',\n        name: 'Filter',\n        category: 'web',\n        depends: [\n            'core',\n            'buttongroup'\n        ]\n    };\n    var editors = {\n        'number': '<input type=\\'text\\' title=\\'#=field#\\' data-#=ns#role=\\'numerictextbox\\' data-#=ns#bind=\\'value: value\\'/>',\n        'string': '<input type=\\'text\\' title=\\'#=field#\\' class=\\'k-textbox\\' data-#=ns#bind=\\'value: value\\'/>',\n        'boolean': '<input class=\\'k-checkbox\\' data-role=\\'checkbox\\' data-#=ns#bind=\\'checked: value\\' type=\\'checkbox\\'>',\n        'date': '<input type=\\'text\\' title=\\'#=field#\\' data-#=ns#role=\\'datepicker\\' data-#=ns#bind=\\'value: value\\'/>'\n    };\n    var operatorsTemplate = '<select data-#=ns#bind=\\'value: operator\\' title=\\'#=operatorsLabel#\\' data-#=ns#role=\\'dropdownlist\\'>' + '#for(var op in operators){#' + '<option value=\\'#=op#\\'>#=operators[op].text || operators[op]#</option>' + '#}#' + '</select>';\n    var logicTemplate = '<div data-#=ns#bind=\\'value: logic\\' data-#=ns#role=\\'filterbuttongroup\\'>' + '#for(var op in operators){#' + '<span value=\\'#=op#\\'>#=operators[op]#</span>' + '#}#' + '</div>';\n    var mainContainer = '<ul class=\\'k-filter-container\\'>' + '<li class=\\'k-filter-group-main\\'></li>' + '</ul>';\n    var mainLogicTemplate = '<div class=\\'k-filter-toolbar\\'>' + '<div class=\\'k-toolbar\\' id=\\'#=uid#\\'>' + '<div class=\\'k-filter-toolbar-item\\'>' + logicTemplate + '</div>' + '<div class=\\'k-filter-toolbar-item\\'>' + '<button data-role=\\'button\\' class=\\'k-button k-button-icon\\' role=\\'button\\' aria-disabled=\\'false\\' title=\\'#=addExpression#\\' aria-label=\\'#=addExpression#\\' tabindex=\\'0\\'>' + '<span class=\\'k-icon k-i-filter-add-expression\\'>' + '</span>' + '</button>' + '</div>' + '<div class=\\'k-filter-toolbar-item\\'>' + '<button data-role=\\'button\\' class=\\'k-button k-button-icon\\' role=\\'button\\' aria-disabled=\\'false\\' title=\\'#=addGroup#\\' aria-label=\\'#=addGroup#\\' tabindex=\\'0\\'>' + '<span class=\\'k-icon k-i-filter-add-group\\'>' + '</span>' + '</button>' + '</div>' + '<div class=\\'k-filter-toolbar-item\\'>' + '<button data-role=\\'button\\' class=\\'k-button-flat k-button k-button-icon\\' role=\\'button\\' title=\\'#=close#\\' aria-label=\\'#=close#\\' aria-disabled=\\'false\\' tabindex=\\'0\\'>' + '<span class=\\'k-icon k-i-close\\'>' + '</span>' + '</button>' + '</div>' + '</div>' + '</div>';\n    var logicItemTemplate = '<li class=\\'k-filter-item\\'>' + '<div class=\\'k-filter-toolbar\\'>' + '<div class=\\'k-toolbar\\'>' + '<div class=\\'k-filter-toolbar-item\\'>' + logicTemplate + '</div>' + '<div class=\\'k-filter-toolbar-item\\'>' + '<button data-role=\\'button\\' class=\\'k-button k-button-icon\\' role=\\'button\\' title=\\'#=addExpression#\\' aria-label=\\'#=addExpression#\\' aria-disabled=\\'false\\' tabindex=\\'0\\'>' + '<span class=\\'k-icon k-i-filter-add-expression\\'>' + '</span>' + '</button>' + '</div>' + '<div class=\\'k-filter-toolbar-item\\'>' + '<button data-role=\\'button\\' class=\\'k-button k-button-icon\\' role=\\'button\\' title=\\'#=addGroup#\\' aria-label=\\'#=addGroup#\\' aria-disabled=\\'false\\' tabindex=\\'0\\'>' + '<span class=\\'k-icon k-i-filter-add-group\\'>' + '</span>' + '</button>' + '</div>' + '<div class=\\'k-filter-toolbar-item\\'>' + '<button data-role=\\'button\\' class=\\'k-button-flat k-button k-button-icon\\' role=\\'button\\' title=\\'#=close#\\' aria-label=\\'#=close#\\' aria-disabled=\\'false\\' tabindex=\\'0\\'>' + '<span class=\\'k-icon k-i-close\\'>' + '</span>' + '</button>' + '</div>' + '</div>' + '</div>' + '</li>';\n    var expressionItemTemplate = '<li class=\\'k-filter-item\\'>' + '<div class=\\'k-filter-toolbar\\'>' + '<div class=\\'k-toolbar\\' id=\\'#=uid#\\'>' + '<div class=\\'k-filter-toolbar-item k-filter-field\\'>' + '<select data-#=ns#bind=\\'value: field\\' title=\\'#=fieldsLabel#\\' class=\\'k-filter-dropdown\\' data-auto-width=\\'true\\' data-#=ns#role=\\'dropdownlist\\'>' + '#for(var current in fields){#' + '<option value=\\'#=fields[current].name#\\'>#=fields[current].label#</option>' + '#}#' + '</select>' + '</div>' + '<div class=\\'k-filter-toolbar-item k-filter-operator\\'>' + '</div>' + '<div class=\\'k-filter-toolbar-item k-filter-value\\'>' + '</div>' + '<div class=\\'k-filter-toolbar-item\\'>' + '<button data-role=\\'button\\' class=\\'k-button-flat k-button k-button-icon\\' role=\\'button\\' title=\\'#=close#\\' aria-label=\\'#=close#\\' aria-disabled=\\'false\\' tabindex=\\'0\\'>' + '<span class=\\'k-icon k-i-close\\'>' + '</span>' + '</button>' + '</div>' + '</div>' + '</div>' + '</li>';\n    (function ($) {\n        var kendo = window.kendo, ui = kendo.ui, Widget = ui.Widget, ButtonGroup = ui.ButtonGroup, CHANGE = 'change', NS = '.kendoFilter', EQ = 'Is equal to', NEQ = 'Is not equal to', proxy = $.proxy;\n        var FilterButtonGroup = ButtonGroup.extend({\n            init: function (element, options) {\n                var that = this;\n                ButtonGroup.fn.init.call(that, element, options);\n            },\n            options: { name: 'FilterButtonGroup' },\n            value: function (value) {\n                if (value === undefined) {\n                    return this._value;\n                }\n                this._value = value;\n                ButtonGroup.fn.select.call(this, this.wrapper.find('[value=\\'' + value + '\\']')[0]);\n                this.trigger(CHANGE);\n            },\n            select: function (button) {\n                if (button !== -1) {\n                    this.value($(button).attr('value'));\n                }\n            }\n        });\n        var Filter = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                var html;\n                Widget.fn.init.call(that, element, options);\n                that.element = $(element).addClass('k-widget k-filter');\n                that.dataSource = options.dataSource;\n                that.operators = $.extend(that.options.operators, options.operators);\n                that._getFieldsInfo();\n                that._modelChangeHandler = proxy(that._modelChange, that);\n                that._renderMain();\n                if (options.expression) {\n                    that._addExpressionTree(that.filterModel);\n                }\n                that._renderApplyButton();\n                if (that.options.expressionPreview) {\n                    if (!that._previewContainer) {\n                        that._previewContainer = $('<div class=\"k-filter-preview\"></div>').insertAfter(that.element.children().eq(0));\n                    }\n                    html = that._createPreview(that.filterModel.toJSON());\n                    that._previewContainer.html(html);\n                }\n                that._attachEvents();\n                that.hasCustomOperators();\n            },\n            events: [CHANGE],\n            options: {\n                name: 'Filter',\n                dataSource: null,\n                expression: null,\n                applyButton: false,\n                fields: [],\n                mainLogic: 'and',\n                messages: {\n                    and: 'And',\n                    or: 'Or',\n                    apply: 'Apply',\n                    close: 'Close',\n                    addExpression: 'Add Expression',\n                    fields: 'Fields',\n                    operators: 'Operators',\n                    addGroup: 'Add Group'\n                },\n                operators: {\n                    string: {\n                        eq: EQ,\n                        neq: NEQ,\n                        startswith: 'Starts with',\n                        contains: 'Contains',\n                        doesnotcontain: 'Does not contain',\n                        endswith: 'Ends with',\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null',\n                        isempty: 'Is empty',\n                        isnotempty: 'Is not empty',\n                        isnullorempty: 'Has no value',\n                        isnotnullorempty: 'Has value'\n                    },\n                    number: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: 'Is greater than or equal to',\n                        gt: 'Is greater than',\n                        lte: 'Is less than or equal to',\n                        lt: 'Is less than',\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null'\n                    },\n                    date: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: 'Is after or equal to',\n                        gt: 'Is after',\n                        lte: 'Is before or equal to',\n                        lt: 'Is before',\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null'\n                    },\n                    'boolean': {\n                        eq: EQ,\n                        neq: NEQ\n                    }\n                }\n            },\n            applyFilter: function () {\n                var filter = this.filterModel.toJSON();\n                if (this._hasCustomOperators) {\n                    this._mapOperators(filter);\n                }\n                if (this._hasFieldsFilter(filter.filters || [])) {\n                    this._removeEmptyGroups(filter.filters);\n                    this.dataSource.filter(filter);\n                } else {\n                    this.dataSource.filter({});\n                }\n            },\n            destroy: function () {\n                this.element.off(NS);\n                kendo.destroy(this.element.find('.k-filter-group-main'));\n                this._previewContainer = null;\n                this._applyButton = null;\n                this._modelChangeHandler = null;\n                Widget.fn.destroy.call(this);\n            },\n            setOptions: function (options) {\n                kendo.deepExtend(this.options, options);\n                this.destroy();\n                this.element.empty();\n                this.init(this.element, this.options);\n            },\n            getOptions: function () {\n                var result = $.extend(true, {}, this.options);\n                delete result.dataSource;\n                result.expression = this.filterModel.toJSON();\n                return result;\n            },\n            _addExpressionTree: function (model) {\n                if (model.filters) {\n                    var parent = this.element.find('[id=' + model.uid + ']');\n                    for (var i = 0; i < model.filters.length; i++) {\n                        if (model.filters[i].logic) {\n                            this._addGroup(parent, model.filters[i]);\n                        } else {\n                            this._addExpression(parent, model.filters[i]);\n                        }\n                        if (model.filters[i].filters) {\n                            this._addExpressionTree(model.filters[i]);\n                        }\n                    }\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                that.element.on('click' + NS, 'button.k-button', function (e) {\n                    e.preventDefault();\n                    var button = $(e.currentTarget);\n                    var icon = button.find('span');\n                    var command = (icon.length ? icon : button).attr('class').split('-').pop();\n                    if (command == 'close') {\n                        that._removeExpression(button.closest('.k-toolbar'));\n                    } else if (command == 'expression') {\n                        that._addExpression(button.closest('.k-toolbar'));\n                    } else if (command == 'group') {\n                        that._addGroup(button.closest('.k-toolbar'));\n                    } else if (command == 'apply') {\n                        that.applyFilter();\n                    }\n                });\n            },\n            _addExpression: function (parentContainer, model) {\n                var that = this;\n                var parentUID = parentContainer.attr('id');\n                var itemsContainer = parentContainer.closest('.k-filter-toolbar').next('ul.k-filter-lines');\n                var field = model ? that._fields[model.field] : that._defaultField;\n                var expressionModel;\n                var itemHTML = '';\n                if (model) {\n                    expressionModel = model;\n                } else {\n                    expressionModel = findModel(that.filterModel, parentUID);\n                    if (!expressionModel.filters) {\n                        expressionModel.set('filters', []);\n                    }\n                    expressionModel = that._addNewModel(expressionModel.filters, field);\n                }\n                if (!itemsContainer.length) {\n                    itemsContainer = $('<ul class=\\'k-filter-lines\\'></ul>').appendTo(parentContainer.closest('li'));\n                }\n                itemHTML = $(kendo.template(expressionItemTemplate)({\n                    fields: that._fields,\n                    operators: that.operators[field.type],\n                    close: that.options.messages.close,\n                    fieldsLabel: that.options.messages.fields,\n                    uid: expressionModel.uid,\n                    ns: kendo.ns\n                })).appendTo(itemsContainer);\n                that._addExpressionControls(itemHTML.find('.k-toolbar'), field, expressionModel);\n                if (!model) {\n                    that._expressionChange();\n                }\n            },\n            _addExpressionControls: function (container, field, filterModel) {\n                var items = container.find('.k-filter-toolbar-item');\n                var operatorsContainer = items.eq(1);\n                var editorContainer = items.eq(2);\n                kendo.destroy(operatorsContainer);\n                kendo.destroy(editorContainer);\n                operatorsContainer.empty();\n                editorContainer.empty();\n                this._appendOperators(operatorsContainer, field);\n                this._appendEditor(editorContainer, field);\n                this._bindModel(container, filterModel);\n                this._showHideEditor(container, filterModel);\n            },\n            _appendOperators: function (container, field) {\n                $(kendo.template(operatorsTemplate)({\n                    operators: field.operators && field.operators[field.type] ? field.operators[field.type] : this.operators[field.type],\n                    operatorsLabel: this.options.messages.operators,\n                    ns: kendo.ns\n                })).appendTo(container);\n            },\n            _appendEditor: function (container, field) {\n                if (kendo.isFunction(field.editor)) {\n                    field.editor(container, $.extend(true, {}, { field: field.name }));\n                } else {\n                    $(kendo.template(field.editor)({\n                        ns: kendo.ns,\n                        field: field.name\n                    })).appendTo(container);\n                }\n            },\n            _addNewModel: function (parent, field) {\n                var filterModel;\n                var type = field.type;\n                var operators = field.operators;\n                var operator;\n                if (!operators) {\n                    operators = this.options.operators;\n                }\n                operator = Object.keys(operators[type])[0];\n                parent.push({ field: field.name });\n                filterModel = parent[parent.length - 1];\n                filterModel.set('value', field.defaultValue);\n                filterModel.set('operator', operator);\n                return filterModel;\n            },\n            _addGroup: function (parent, model) {\n                var that = this;\n                var filterModel = that.filterModel;\n                var parentUID = parent.attr('id');\n                var itemsContainer = parent.closest('.k-filter-toolbar').next('ul.k-filter-lines');\n                var logicHTML;\n                if (model) {\n                    filterModel = model;\n                } else {\n                    filterModel = findModel(filterModel, parentUID);\n                    if (!filterModel.filters) {\n                        filterModel.set('filters', []);\n                    }\n                    filterModel.filters.push({ logic: that.options.mainLogic });\n                    filterModel = filterModel.filters[filterModel.filters.length - 1];\n                }\n                if (!itemsContainer.length) {\n                    itemsContainer = $('<ul class=\\'k-filter-lines\\'></ul>').appendTo(parent.closest('li'));\n                }\n                logicHTML = $(kendo.template(logicItemTemplate)({\n                    operators: {\n                        and: that.options.messages.and,\n                        or: that.options.messages.or\n                    },\n                    addExpression: that.options.messages.addExpression,\n                    addGroup: that.options.messages.addGroup,\n                    close: that.options.messages.close,\n                    ns: kendo.ns\n                })).appendTo(itemsContainer);\n                that._bindModel(logicHTML.find('.k-toolbar'), filterModel);\n                if (!model) {\n                    that._expressionChange();\n                }\n            },\n            _bindModel: function (container, model) {\n                container.attr('id', model.uid);\n                model.bind('change', this._modelChangeHandler);\n                kendo.bind(container, model);\n                container.parent().attr(kendo.attr('stop'), true);\n            },\n            _createPreview: function (filter) {\n                var html = '';\n                var createdField = false;\n                var haveFields = this._hasFieldsFilter(filter.filters || []);\n                var childhtml = '';\n                var current;\n                var field;\n                if (!filter.filters || !filter.filters.length || !haveFields) {\n                    return '';\n                }\n                html += '<span class=\"k-filter-preview-bracket\">(</span>';\n                for (var i = 0; i < filter.filters.length; i++) {\n                    current = filter.filters[i];\n                    if (current.filters) {\n                        childhtml = this._createPreview(current);\n                        if (childhtml) {\n                            if (createdField) {\n                                html += '<span class=\"k-filter-preview-operator\"> ' + filter.logic.toLocaleUpperCase() + ' </span>';\n                            }\n                            createdField = true;\n                        }\n                        html += childhtml;\n                    }\n                    if (current.field) {\n                        field = this._fields[current.field];\n                        if (createdField) {\n                            html += '<span class=\"k-filter-preview-operator\"> ' + filter.logic.toLocaleUpperCase() + ' </span>';\n                        }\n                        createdField = true;\n                        html += '<span class=\"k-filter-preview-field\">' + field.label + '</span>';\n                        html += '<span class=\"k-filter-preview-criteria\"> ' + this._getOperatorText(current.field, current.operator);\n                        if (current.operator.indexOf('is') < 0) {\n                            html += ' </span>';\n                            html += '<span class=\\'k-filter-preview-value\\'>\\'' + kendo.htmlEncode(field.previewFormat ? kendo.toString(current.value, field.previewFormat) : current.value) + '\\'</span>';\n                        } else {\n                            html += '</span>';\n                        }\n                    }\n                }\n                html += '<span class=\"k-filter-preview-bracket\">)</span>';\n                return html;\n            },\n            _expressionChange: function () {\n                var that = this;\n                var filter = that.filterModel.toJSON();\n                var html = '';\n                if (that.options.expressionPreview) {\n                    html = that._createPreview(filter);\n                    that._previewContainer.html(html);\n                }\n                that.trigger(CHANGE, { expression: filter });\n            },\n            _getOperatorText: function (field, operator) {\n                var type = this._fields[field].type;\n                var operators = this._fields[field].operators;\n                if (!operators) {\n                    operators = this.options.operators;\n                }\n                return operators[type][operator].text || operators[type][operator];\n            },\n            _addField: function (fieldInfo, field) {\n                var that = this;\n                fieldInfo = $.extend(true, {}, {\n                    name: fieldInfo.name || field,\n                    editor: fieldInfo.editorTemplate || editors[fieldInfo.type || 'string'],\n                    defaultValue: fieldInfo.defaultValue || fieldInfo.defaultValue === false || fieldInfo.defaultValue === 0 ? fieldInfo.defaultValue : '',\n                    type: fieldInfo.type || 'string',\n                    label: fieldInfo.label || fieldInfo.name || field,\n                    operators: fieldInfo.operators,\n                    previewFormat: fieldInfo.previewFormat\n                });\n                that._fields[fieldInfo.name] = fieldInfo;\n                if (!that._defaultField) {\n                    that._defaultField = fieldInfo;\n                }\n            },\n            _getFieldsInfo: function () {\n                var that = this;\n                var fieldsCollection = that.options.fields.length ? that.options.fields : (that.options.dataSource.options.schema.model || {}).fields;\n                var fieldInfo;\n                that._fields = {};\n                if (Array.isArray(fieldsCollection)) {\n                    for (var i = 0; i < fieldsCollection.length; i++) {\n                        fieldInfo = fieldsCollection[i];\n                        that._addField(fieldInfo);\n                    }\n                } else {\n                    for (var field in fieldsCollection) {\n                        fieldInfo = fieldsCollection[field];\n                        that._addField(fieldInfo, field);\n                    }\n                }\n            },\n            _hasFieldsFilter: function (filters, haveField) {\n                haveField = !!haveField;\n                for (var i = 0; i < filters.length; i++) {\n                    if (filters[i].filters) {\n                        haveField = this._hasFieldsFilter(filters[i].filters, haveField);\n                    }\n                    if (filters[i].field) {\n                        return true;\n                    }\n                }\n                return haveField;\n            },\n            _removeEmptyGroups: function (filters) {\n                if (!filters) {\n                    return;\n                }\n                for (var i = filters.length - 1; i >= 0; i--) {\n                    if (filters[i].logic && !filters[i].filters || filters[i].filters && !this._hasFieldsFilter(filters[i].filters)) {\n                        filters.splice(i, 1);\n                        continue;\n                    }\n                    if (filters[i].filters) {\n                        this._removeEmptyGroups(filters[i].filters);\n                    }\n                }\n            },\n            _modelChange: function (e) {\n                var that = this;\n                var container = that.element.find('[id=' + e.sender.uid + ']');\n                that._showHideEditor(container, e.sender);\n                if (e.field !== 'field') {\n                    if (e.field !== 'filters') {\n                        that._expressionChange();\n                    }\n                    return;\n                }\n                var newField = e.sender.field;\n                var parent = e.sender.parent();\n                var field = that._fields[newField];\n                var filterModel = that._addNewModel(parent, field);\n                e.sender.unbind('change', that._modelChangeHandler);\n                parent.remove(e.sender);\n                that._addExpressionControls(container, field, filterModel);\n                that._expressionChange();\n            },\n            _renderMain: function () {\n                var that = this;\n                $(mainContainer).appendTo(that.element);\n                if (that.options.expression) {\n                    that.filterModel = kendo.observable(that.options.expression);\n                } else {\n                    that.filterModel = kendo.observable({ logic: that.options.mainLogic });\n                }\n                $(kendo.template(mainLogicTemplate)({\n                    operators: {\n                        and: that.options.messages.and,\n                        or: that.options.messages.or\n                    },\n                    addExpression: that.options.messages.addExpression,\n                    addGroup: that.options.messages.addGroup,\n                    close: that.options.messages.close,\n                    uid: that.filterModel.uid,\n                    ns: kendo.ns\n                })).appendTo(that.element.find('li:first'));\n                that._bindModel(that.element.find('.k-toolbar:first'), that.filterModel);\n            },\n            _removeExpression: function (parent) {\n                var that = this;\n                var parentUID = parent.attr('id');\n                var itemContainer = parent.closest('li');\n                var isMain = itemContainer.hasClass('k-filter-group-main');\n                var parentModel;\n                var model;\n                if (isMain) {\n                    itemContainer = itemContainer.find('.k-filter-lines');\n                    if (that.filterModel.filters) {\n                        that.filterModel.filters.empty();\n                        delete that.filterModel.filters;\n                    }\n                } else {\n                    model = findModel(that.filterModel, parentUID);\n                    parentModel = model.parent();\n                    model.unbind('change', that._modelChangeHandler);\n                    parentModel.remove(model);\n                    if (!parentModel.length) {\n                        delete parentModel.parent().filters;\n                    }\n                    if (!itemContainer.siblings().length) {\n                        itemContainer = itemContainer.parent();\n                    }\n                }\n                kendo.destroy(itemContainer);\n                itemContainer.remove();\n                that._expressionChange();\n            },\n            _renderApplyButton: function () {\n                var that = this;\n                if (!that.options.applyButton) {\n                    return;\n                }\n                if (!that._applyButton) {\n                    that._applyButton = $(kendo.format('<button type=\"button\" aria-label=\"{0}\" title=\"{0}\" class=\"k-button k-filter-apply\">{0}</button>', that.options.messages.apply)).appendTo(that.element);\n                }\n            },\n            _showHideEditor: function (container, model) {\n                if (model.logic) {\n                    return;\n                }\n                var operator = model.operator;\n                var editorContainer = container.find('.k-filter-toolbar-item:eq(2)');\n                if (operator == 'isnull' || operator == 'isnotnull' || operator == 'isempty' || operator == 'isnotempty' || operator == 'isnullorempty' || operator == 'isnotnullorempty') {\n                    editorContainer.hide();\n                } else {\n                    editorContainer.show();\n                }\n            },\n            _mapOperators: function (expression) {\n                var that = this;\n                if (expression.filters) {\n                    expression.filters.forEach(function (filter) {\n                        if (filter.filters) {\n                            that._mapOperators(filter);\n                        } else {\n                            var operator;\n                            var field = that._fields[filter.field];\n                            var type = field.type;\n                            if (field.operators && field.operators[type][filter.operator]) {\n                                operator = field.operators[type][filter.operator];\n                            } else {\n                                operator = that.operators[type][filter.operator];\n                            }\n                            if (operator) {\n                                filter.operator = operator.handler || filter.operator;\n                            }\n                        }\n                    });\n                }\n            },\n            hasCustomOperators: function () {\n                var operators = $.extend(true, {}, this.operators);\n                for (var field in this._fields) {\n                    operators = $.extend(true, {}, operators, this._fields[field].operators);\n                }\n                this._hasCustomOperators = findCustomOperators(operators);\n            }\n        });\n        function findCustomOperators(operators) {\n            for (var field in operators) {\n                var operator = operators[field];\n                if (operator.handler && typeof operator.handler === 'function' || typeof operator === 'object' && operator !== null && findCustomOperators(operator)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function findModel(model, uid) {\n            if (model.uid === uid) {\n                return model;\n            }\n            if (model.filters) {\n                for (var i = 0; i < model.filters.length; i++) {\n                    var temp = findModel(model.filters[i], uid);\n                    if (temp) {\n                        return temp;\n                    }\n                }\n            }\n        }\n        ui.plugin(Filter);\n        ui.plugin(FilterButtonGroup);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}