{"version":3,"sources":["kendo.datetimepicker.js"],"names":["f","define","$","undefined","lastTimeOption","interval","date","Date","setMinutes","preventDefault","e","normalize","options","timeFormat","patterns","kendo","getCulture","culture","calendars","standard","parseFormats","length","format","extractFormat","g","t","DateView","unshift","inArray","push","window","TimeView","parse","parseDate","support","activeElement","_activeElement","_extractFormat","calendar","isInRange","restrictValue","isEqualDatePart","getMilliseconds","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","UP","mouseAndTouchPresent","applyEventMap","slice","DISABLED","READONLY","DEFAULT","FOCUSED","HOVER","STATEDISABLED","HOVEREVENTS","MOUSEDOWN","MONTH","SPAN","ARIA_ACTIVEDESCENDANT","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_OWNS","ARIA_DISABLED","ARIA_READONLY","DATE","MIN","MAX","dateViewParams","view","timeViewParams","extend","SINGLE_POPUP_TEMPLATE","STATE_ACTIVE","DateTimePicker","init","element","disabled","that","this","componentType","fn","call","disableDates","min","attr","max","_specifiedRange","_initialOptions","_wrapper","singlePopup","_popup","_views","_icons","_reset","_template","setAttribute","type","addClass","role","aria-expanded","autocomplete","_midnight","_calculateMidnight","is","parents","enable","readonly","_createDateInput","_old","_update","value","val","_oldText","notify","name","dates","height","footer","start","depth","animation","month","ARIATemplate","dateButtonText","timeButtonText","dateInput","weekNumber","messages","set","cancel","hour","minute","second","millisecond","now","time","today","events","componentTypes","classic","timeView","list","modern","setOptions","currentValue","_value","dateView","_current","_dateInput","toString","_updateARIA","_editable","off","dateIcon","_dateIcon","timeIcon","_timeIcon","wrapper","_inputWrapper","disable","removeClass","on","_toggleHover","removeAttribute","proxy","_keydown","_change","current","getToday","close","toggle","_focusElement","eventType","touch","match","trigger","destroy","popup","_form","_resetHandler","open","popupHovered","_calendar","ul","find","bind","_hovered","_switchToTimeView","_switchToDateView","setTimeout","_option","visible","secondView","dateChanged","valueUpdated","textFormatted","oldValue","_typing","option","minDateEqual","maxDateEqual","timeViewOptions","maxSet","getTime","dataBind","currentTarget","toggleClass","rebind","old","skip","formattedValue","isSameType","String","grep","d","isDateViewVisible","stopPropagation","stopImmediatePropagation","altKey","keyCode","keys","DOWN","move","ENTER","div","msMin","timeDiv","omitPopup","id","dateDiv","anchor","change","_applyDateValue","_currentlySelected","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","_toggleIcons","_dateViewID","validateDate","_applyTimeValue","_timeSelected","_adjustListWidth","_updateTitle","_timeViewID","active","_optionID","useValueToRender","specifiedRange","adjustedDate","msValue","msMax","setHours","_parse","icons","next","insertAfter","children","eq","hide","wrap","parent","style","cssText","css","width","className","firstChild","formId","form","closest","disabledDate","optionsValue","initialValue","defaultValue","_ariaTemplate","template","DateInput","_updateAria","appendTo","document","body","append","Popup","isRtl","activate","addTranslate","applyValue","_updateRanges","sender","_groupChangeClick","_cancelClickHandler","_setClickHandler","button","index","_updateCurrentlySelected","getHours","getMinutes","setSeconds","getSeconds","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.datetimepicker.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.datetimepicker', [\n        'kendo.datepicker',\n        'kendo.timepicker'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'datetimepicker',\n        name: 'DateTimePicker',\n        category: 'web',\n        description: 'The DateTimePicker allows the end user to select a value from a calendar or a time drop-down list.',\n        depends: [\n            'datepicker',\n            'timepicker'\n        ]\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, TimeView = kendo.TimeView, parse = kendo.parseDate, support = kendo.support, activeElement = kendo._activeElement, extractFormat = kendo._extractFormat, calendar = kendo.calendar, isInRange = calendar.isInRange, restrictValue = calendar.restrictValue, isEqualDatePart = calendar.isEqualDatePart, getMilliseconds = TimeView.getMilliseconds, ui = kendo.ui, Widget = ui.Widget, OPEN = 'open', CLOSE = 'close', CHANGE = 'change', ns = '.kendoDateTimePicker', CLICK = 'click' + ns, UP = support.mouseAndTouchPresent ? kendo.applyEventMap('up', ns.slice(1)) : CLICK, DISABLED = 'disabled', READONLY = 'readonly', DEFAULT = 'k-state-default', FOCUSED = 'k-state-focused', HOVER = 'k-state-hover', STATEDISABLED = 'k-state-disabled', HOVEREVENTS = 'mouseenter' + ns + ' mouseleave' + ns, MOUSEDOWN = 'mousedown' + ns, MONTH = 'month', SPAN = '<span/>', ARIA_ACTIVEDESCENDANT = 'aria-activedescendant', ARIA_EXPANDED = 'aria-expanded', ARIA_HIDDEN = 'aria-hidden', ARIA_OWNS = 'aria-owns', ARIA_DISABLED = 'aria-disabled', ARIA_READONLY = 'aria-readonly', DATE = Date, MIN = new DATE(1800, 0, 1), MAX = new DATE(2099, 11, 31), dateViewParams = { view: 'date' }, timeViewParams = { view: 'time' }, extend = $.extend, SINGLE_POPUP_TEMPLATE = '<div class=\"k-date-tab k-datetime-wrap\">' + '<div class=\"k-datetime-buttongroup\">' + '<div class=\"k-button-group k-button-group-stretched\">' + '<button class=\"k-button k-state-active k-group-start\">#=messages.date#</button>' + '<button class=\"k-button k-group-end\">#=messages.time#</button>' + '</div>' + '</div>' + '<div class=\"k-datetime-selector\">' + '<div class=\"k-datetime-calendar-wrap\">' + '</div>' + '<div class=\"k-datetime-time-wrap\">' + '</div>' + '</div>' + '<div class=\"k-datetime-footer k-action-buttons\">' + '<button class=\"k-button k-time-cancel\" title=\"Cancel\" aria-label=\"Cancel\">#=messages.cancel#</button>' + '<button class=\"k-time-accept k-button k-primary\" title=\"Set\" aria-label=\"Set\">#=messages.set#</button>' + '</div>' + '</div>', STATE_ACTIVE = 'k-state-active';\n        var DateTimePicker = Widget.extend({\n            init: function (element, options) {\n                var that = this, disabled;\n                options = options || {};\n                options.componentType = options.componentType || 'classic';\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n                options.disableDates = kendo.calendar.disabled(options.disableDates);\n                options.min = parse(element.attr('min')) || parse(options.min);\n                options.max = parse(element.attr('max')) || parse(options.max);\n                if (+options.max != +MAX || +options.min != +MIN) {\n                    this._specifiedRange = true;\n                }\n                normalize(options);\n                that._initialOptions = extend({}, options);\n                that._wrapper();\n                if (options.singlePopup) {\n                    that._popup();\n                }\n                that._views();\n                that._icons();\n                that._reset();\n                that._template();\n                try {\n                    element[0].setAttribute('type', 'text');\n                } catch (e) {\n                    element[0].type = 'text';\n                }\n                element.addClass('k-input').attr({\n                    'role': 'combobox',\n                    'aria-expanded': false,\n                    'autocomplete': 'off'\n                });\n                that._midnight = that._calculateMidnight(options.min, options.max);\n                disabled = element.is('[disabled]') || $(that.element).parents('fieldset').is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is('[readonly]'));\n                }\n                that._createDateInput(options);\n                that._old = that._update(options.value || that.element.val());\n                that._oldText = element.val();\n                kendo.notify(that);\n            },\n            options: {\n                name: 'DateTimePicker',\n                value: null,\n                format: '',\n                timeFormat: '',\n                culture: '',\n                parseFormats: [],\n                dates: [],\n                disableDates: null,\n                min: new DATE(MIN),\n                max: new DATE(MAX),\n                interval: 30,\n                height: 200,\n                footer: '',\n                start: MONTH,\n                depth: MONTH,\n                animation: {},\n                month: {},\n                ARIATemplate: 'Current focused #=data.valueType# is #=data.text#',\n                dateButtonText: 'Open the date view',\n                timeButtonText: 'Open the time view',\n                dateInput: false,\n                weekNumber: false,\n                messages: {\n                    set: 'Set',\n                    cancel: 'Cancel',\n                    hour: 'hour',\n                    minute: 'minute',\n                    second: 'second',\n                    millisecond: 'millisecond',\n                    now: 'Now',\n                    date: 'Date',\n                    time: 'Time',\n                    today: 'Today'\n                },\n                componentType: 'classic'\n            },\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE\n            ],\n            componentTypes: {\n                'classic': {\n                    singlePopup: false,\n                    timeView: { list: 'list' }\n                },\n                'modern': {\n                    singlePopup: true,\n                    timeView: { list: 'scroll' }\n                }\n            },\n            setOptions: function (options) {\n                var that = this, value = that._value, min, max, currentValue;\n                Widget.fn.setOptions.call(that, options);\n                options = that.options;\n                options.min = min = parse(options.min);\n                options.max = max = parse(options.max);\n                normalize(options);\n                that._midnight = that._calculateMidnight(options.min, options.max);\n                currentValue = options.value || that._value || that.dateView._current;\n                if (min && !isEqualDatePart(min, currentValue)) {\n                    min = new DATE(MIN);\n                }\n                if (max && !isEqualDatePart(max, currentValue)) {\n                    max = new DATE(MAX);\n                }\n                that.dateView.setOptions(options);\n                that.timeView.setOptions(extend({}, options, {\n                    format: options.timeFormat,\n                    min: min,\n                    max: max\n                }));\n                that._createDateInput(options);\n                if (!that._dateInput) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n                if (value) {\n                    that._updateARIA(value);\n                }\n            },\n            _editable: function (options) {\n                var that = this, element = that.element.off(ns), dateIcon = that._dateIcon.off(ns), timeIcon = that._timeIcon.off(ns), wrapper = that._inputWrapper.off(ns), readonly = options.readonly, disable = options.disable;\n                if (!readonly && !disable) {\n                    wrapper.addClass(DEFAULT).removeClass(STATEDISABLED).on(HOVEREVENTS, that._toggleHover);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY, false);\n                        element[0].removeAttribute(ARIA_DISABLED, false);\n                        element[0].removeAttribute(ARIA_READONLY, false);\n                    }\n                    element.on('keydown' + ns, $.proxy(that._keydown, that)).on('focus' + ns, function () {\n                        that._inputWrapper.addClass(FOCUSED);\n                    }).on('focusout' + ns, function () {\n                        that._inputWrapper.removeClass(FOCUSED);\n                        if (element.val() !== that._oldText) {\n                            that._change(element.val());\n                            if (!element.val()) {\n                                that.dateView.current(kendo.calendar.getToday());\n                            }\n                        }\n                        if (that.options.singlePopup) {\n                            return;\n                        }\n                        that.close('date');\n                        that.close('time');\n                    });\n                    dateIcon.on(MOUSEDOWN, preventDefault).on(UP, function (e) {\n                        that.toggle('date');\n                        that._focusElement(e.type);\n                    });\n                    timeIcon.on(MOUSEDOWN, preventDefault).on(UP, function (e) {\n                        that.toggle('time');\n                        that._focusElement(e.type);\n                    });\n                } else {\n                    wrapper.addClass(disable ? STATEDISABLED : DEFAULT).removeClass(disable ? DEFAULT : STATEDISABLED);\n                    element.attr(DISABLED, disable).attr(READONLY, readonly).attr(ARIA_DISABLED, disable).attr(ARIA_READONLY, readonly);\n                }\n            },\n            _focusElement: function (eventType) {\n                var element = this.element;\n                if ((!support.touch || support.mouseAndTouchPresent && !(eventType || '').match(/touch/i)) && element[0] !== activeElement()) {\n                    element.trigger('focus');\n                }\n            },\n            readonly: function (readonly) {\n                this._editable({\n                    readonly: readonly === undefined ? true : readonly,\n                    disable: false\n                });\n            },\n            enable: function (enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined ? true : enable)\n                });\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                that.dateView.destroy();\n                that.timeView.destroy();\n                if (that.options.singlePopup) {\n                    that.popup.element.off(ns);\n                    that.popup.destroy();\n                }\n                that.element.off(ns);\n                that._dateIcon.off(ns);\n                that._timeIcon.off(ns);\n                that._inputWrapper.off(ns);\n                if (that._form) {\n                    that._form.off('reset', that._resetHandler);\n                }\n            },\n            close: function (view) {\n                if (this.options.singlePopup) {\n                    this.popup.close();\n                } else {\n                    if (view !== 'time') {\n                        view = 'date';\n                    }\n                    this[view + 'View'].close();\n                }\n            },\n            open: function (view) {\n                var that = this;\n                var popupHovered;\n                if (that.options.singlePopup) {\n                    that.dateView._calendar();\n                    if (that.timeView.ul.find('li').length < 1) {\n                        that.timeView.bind();\n                    }\n                    popupHovered = that.popup._hovered;\n                    that.popup._hovered = true;\n                    that.popup.open();\n                    if (view === 'time') {\n                        that._switchToTimeView();\n                    } else {\n                        that._switchToDateView();\n                    }\n                    this._dateIcon.toggle(view !== 'time');\n                    this._timeIcon.toggle(view === 'time');\n                    setTimeout(function () {\n                        that.popup._hovered = popupHovered;\n                    }, 1);\n                } else {\n                    if (view !== 'time') {\n                        view = 'date';\n                    }\n                    this[view + 'View'].open();\n                }\n            },\n            min: function (value) {\n                return this._option('min', value);\n            },\n            max: function (value) {\n                return this._option('max', value);\n            },\n            toggle: function (view) {\n                if (this.options.singlePopup) {\n                    if (this.popup.visible()) {\n                        this.close();\n                    } else {\n                        this.open(view);\n                    }\n                } else {\n                    var secondView = 'timeView';\n                    if (view !== 'time') {\n                        view = 'date';\n                    } else {\n                        secondView = 'dateView';\n                    }\n                    this[view + 'View'].toggle();\n                    this[secondView].close();\n                }\n            },\n            value: function (value) {\n                var that = this;\n                if (value === undefined) {\n                    return that._value;\n                }\n                that._old = that._update(value);\n                if (that._old === null) {\n                    that.element.val('');\n                }\n                that._oldText = that.element.val();\n            },\n            _change: function (value) {\n                var that = this, oldValue = that.element.val(), dateChanged;\n                value = that._update(value);\n                dateChanged = +that._old != +value;\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n                    that.trigger(CHANGE);\n                }\n                that._typing = false;\n            },\n            _option: function (option, value) {\n                var that = this;\n                var options = that.options;\n                var timeView = that.timeView;\n                var timeViewOptions = timeView.options;\n                var current = that._value || that._old;\n                var minDateEqual;\n                var maxDateEqual;\n                if (value === undefined) {\n                    return options[option];\n                }\n                value = parse(value, options.parseFormats, options.culture);\n                timeViewOptions.maxSet = false;\n                if (!value) {\n                    return;\n                }\n                if (options.min.getTime() === options.max.getTime()) {\n                    timeViewOptions.dates = [];\n                }\n                options[option] = new DATE(value.getTime());\n                that.dateView[option](value);\n                that._midnight = that._calculateMidnight(options.min, options.max);\n                if (current) {\n                    minDateEqual = isEqualDatePart(options.min, current);\n                    maxDateEqual = isEqualDatePart(options.max, current);\n                }\n                if (minDateEqual || maxDateEqual) {\n                    timeViewOptions[option] = value;\n                    if (minDateEqual && !maxDateEqual) {\n                        timeViewOptions.max = lastTimeOption(options.interval);\n                    }\n                    if (maxDateEqual) {\n                        if (that._midnight) {\n                            timeView.dataBind([MAX]);\n                            return;\n                        } else if (!minDateEqual) {\n                            timeViewOptions.min = MIN;\n                            timeViewOptions.maxSet = true;\n                        }\n                    }\n                } else {\n                    timeViewOptions.max = MAX;\n                    timeViewOptions.min = MIN;\n                }\n                timeView.bind();\n            },\n            _toggleHover: function (e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === 'mouseenter');\n            },\n            _update: function (value) {\n                var that = this, options = that.options, min = options.min, max = options.max, dates = options.dates, timeView = that.timeView, current = that._value, date = parse(value, options.parseFormats, options.culture), isSameType = date === null && current === null || date instanceof Date && current instanceof Date, rebind, timeViewOptions, old, skip, formattedValue;\n                if (options.disableDates && options.disableDates(date)) {\n                    date = null;\n                    if (!that._old && !that.element.val()) {\n                        value = null;\n                    }\n                }\n                if (+date === +current && isSameType) {\n                    formattedValue = kendo.toString(date, options.format, options.culture);\n                    if (formattedValue !== value) {\n                        that.element.val(date === null ? value : formattedValue);\n                        if (value instanceof String) {\n                            that.element.trigger(CHANGE);\n                        }\n                    }\n                    return date;\n                }\n                if (date !== null && isEqualDatePart(date, min)) {\n                    date = restrictValue(date, min, max);\n                } else if (!isInRange(date, min, max)) {\n                    date = null;\n                }\n                that._value = date;\n                timeView.value(date);\n                that.dateView.value(date);\n                if (date) {\n                    old = that._old;\n                    timeViewOptions = timeView.options;\n                    timeViewOptions.maxSet = false;\n                    if (dates[0]) {\n                        dates = $.grep(dates, function (d) {\n                            return isEqualDatePart(date, d);\n                        });\n                        if (dates[0]) {\n                            timeView.dataBind(dates);\n                            skip = true;\n                        }\n                    }\n                    if (!skip) {\n                        if (isEqualDatePart(date, min)) {\n                            timeViewOptions.min = min;\n                            timeViewOptions.max = lastTimeOption(options.interval);\n                            rebind = true;\n                        }\n                        if (isEqualDatePart(date, max)) {\n                            if (that._midnight) {\n                                timeView.dataBind([MAX]);\n                                skip = true;\n                            } else {\n                                timeViewOptions.max = max;\n                                timeViewOptions.maxSet = true;\n                                if (!rebind) {\n                                    timeViewOptions.min = MIN;\n                                }\n                                rebind = true;\n                            }\n                        }\n                    }\n                    if (!skip && (!old && rebind || old && !isEqualDatePart(old, date))) {\n                        if (!rebind) {\n                            timeViewOptions.max = MAX;\n                            timeViewOptions.min = MIN;\n                        }\n                        timeView.bind();\n                    }\n                }\n                if (that._dateInput && date) {\n                    that._dateInput.value(date || value);\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                that._updateARIA(date);\n                return date;\n            },\n            _keydown: function (e) {\n                var that = this, dateView = that.dateView, timeView = that.timeView, value = that.element.val(), isDateViewVisible = that.options.singlePopup ? that.popup.visible() : dateView.popup.visible();\n                var stopPropagation = that._dateInput && e.stopImmediatePropagation;\n                if (e.altKey && e.keyCode === kendo.keys.DOWN) {\n                    that.toggle(isDateViewVisible ? 'time' : 'date');\n                } else if (isDateViewVisible) {\n                    dateView.move(e);\n                    that._updateARIA(dateView._current);\n                } else if (!that.options.singlePopup && timeView.popup.visible()) {\n                    timeView.move(e);\n                } else if (e.keyCode === kendo.keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    that._typing = true;\n                    stopPropagation = false;\n                }\n                if (stopPropagation) {\n                    e.stopImmediatePropagation();\n                }\n            },\n            _views: function () {\n                var that = this, element = that.element, options = that.options, id = element.attr('id'), dateView, timeView, div, ul, msMin, date, timeDiv, omitPopup, timeViewOptions;\n                if (options.singlePopup) {\n                    options.dateDiv = that.popup.element.find('.k-datetime-calendar-wrap');\n                    timeDiv = that.popup.element.find('.k-datetime-time-wrap');\n                    options.omitPopup = omitPopup = true;\n                    timeViewOptions = options.timeView;\n                }\n                that.dateView = dateView = new kendo.DateView(extend({}, options, {\n                    id: id,\n                    anchor: that.wrapper,\n                    change: function () {\n                        var value = that._applyDateValue();\n                        if (options.singlePopup) {\n                            if (!that.timeView._currentlySelected) {\n                                that.timeView._currentlySelected = new Date();\n                            }\n                            that.timeView._currentlySelected.setFullYear(value.getFullYear());\n                            that.timeView._currentlySelected.setMonth(value.getMonth());\n                            that.timeView._currentlySelected.setDate(value.getDate());\n                            that._switchToTimeView();\n                            that._toggleIcons();\n                        } else {\n                            that._change(value);\n                            that.close('date');\n                        }\n                    },\n                    close: function (e) {\n                        if (that.trigger(CLOSE, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            div.attr(ARIA_HIDDEN, true);\n                            if (!that.options.singlePopup && !timeView.popup.visible()) {\n                                if (element && element.length) {\n                                    element[0].removeAttribute(ARIA_OWNS);\n                                }\n                            }\n                        }\n                    },\n                    open: function (e) {\n                        if (that.trigger(OPEN, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n                                that.dateView[date ? 'current' : 'value'](date);\n                            }\n                            div.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true).attr(ARIA_OWNS, dateView._dateViewID);\n                            that._updateARIA(date);\n                        }\n                    }\n                }));\n                div = dateView.div;\n                msMin = options.min.getTime();\n                that.timeView = timeView = new TimeView({\n                    id: id,\n                    value: options.value,\n                    anchor: that.wrapper,\n                    animation: options.animation,\n                    format: options.timeFormat,\n                    culture: options.culture,\n                    height: options.componentType === 'modern' ? null : options.height,\n                    interval: options.interval,\n                    min: options.componentType === 'modern' ? options.min : new DATE(MIN),\n                    max: options.componentType === 'modern' ? options.max : new DATE(MAX),\n                    dates: msMin === options.max.getTime() ? [new Date(msMin)] : [],\n                    parseFormats: options.parseFormats,\n                    validateDate: true,\n                    change: function (value, trigger) {\n                        value = that._applyTimeValue(value);\n                        if (trigger) {\n                            that._timeSelected = true;\n                            that._change(value);\n                        } else {\n                            element.val(kendo.toString(value, options.format, options.culture));\n                            dateView.value(value);\n                            that._updateARIA(value);\n                        }\n                    },\n                    close: function (e) {\n                        if (that.trigger(CLOSE, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            ul.attr(ARIA_HIDDEN, true);\n                            element.attr(ARIA_EXPANDED, false);\n                            if (!dateView.popup.visible()) {\n                                if (element && element.length) {\n                                    element[0].removeAttribute(ARIA_OWNS);\n                                }\n                            }\n                        }\n                    },\n                    open: function (e) {\n                        if (that.options.componentType !== 'modern') {\n                            timeView._adjustListWidth();\n                        } else {\n                            that.timeView._updateTitle();\n                        }\n                        if (that.trigger(OPEN, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n                                that.timeView.value(date);\n                            }\n                            ul.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true).attr(ARIA_OWNS, timeView._timeViewID);\n                            timeView.options.active(timeView.current());\n                        }\n                    },\n                    active: function (current) {\n                        if (element && element.length) {\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                        if (current) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    },\n                    popup: options.popup,\n                    useValueToRender: true,\n                    specifiedRange: that._specifiedRange,\n                    omitPopup: omitPopup,\n                    timeDiv: timeDiv,\n                    timeView: timeViewOptions,\n                    messages: that.options.messages\n                });\n                ul = timeView.ul;\n            },\n            _applyDateValue: function () {\n                var that = this;\n                var options = that.options;\n                var dateView = that.dateView;\n                var value = dateView.calendar.value();\n                var msValue = +value;\n                var msMin = +options.min;\n                var msMax = +options.max;\n                var current, adjustedDate;\n                if (msValue === msMin || msValue === msMax) {\n                    current = msValue === msMin ? msMin : msMax;\n                    current = new DATE(that._value || current);\n                    current.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n                    if (isInRange(current, msMin, msMax)) {\n                        value = current;\n                    }\n                }\n                if (that._value) {\n                    adjustedDate = kendo.date.setHours(new Date(value), that._value);\n                    if (isInRange(adjustedDate, msMin, msMax)) {\n                        value = adjustedDate;\n                    }\n                }\n                return value;\n            },\n            _applyTimeValue: function (value) {\n                var timeView = this.timeView;\n                var options = this.options;\n                value = timeView._parse(value);\n                if (value < options.min) {\n                    value = new DATE(+options.min);\n                    timeView.options.min = value;\n                } else if (value > options.max) {\n                    value = new DATE(+options.max);\n                    timeView.options.max = value;\n                }\n                return value;\n            },\n            _icons: function () {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var icons;\n                icons = element.next('span.k-select');\n                if (!icons[0]) {\n                    icons = $('<span unselectable=\"on\" class=\"k-select\">' + '<span class=\"k-link k-link-date\" role=\"button\" aria-label=\"' + options.dateButtonText + '\"><span unselectable=\"on\" class=\"k-icon k-i-calendar\"></span></span>' + '<span class=\"k-link k-link-time\" role=\"button\" aria-label=\"' + options.timeButtonText + '\"><span unselectable=\"on\" class=\"k-icon k-i-clock\"></span></span>' + '</span>').insertAfter(element);\n                }\n                icons = icons.children();\n                that._dateIcon = icons.eq(0).attr('aria-controls', that.dateView._dateViewID);\n                that._timeIcon = icons.eq(1).attr('aria-controls', that.timeView._timeViewID);\n                if (options.singlePopup) {\n                    that._timeIcon.hide();\n                }\n            },\n            _wrapper: function () {\n                var that = this, element = that.element, wrapper;\n                wrapper = element.parents('.k-datetimepicker');\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent().addClass('k-picker-wrap k-state-default');\n                    wrapper = wrapper.wrap(SPAN).parent();\n                }\n                wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    width: '100%',\n                    height: element[0].style.height\n                });\n                that.wrapper = wrapper.addClass('k-widget k-datetimepicker').addClass(element[0].className).removeClass('input-validation-error');\n                that._inputWrapper = $(wrapper[0].firstChild);\n            },\n            _reset: function () {\n                var that = this, element = that.element, formId = element.attr('form'), form = formId ? $('#' + formId) : element.closest('form'), options = that.options, disabledDate = options.disableDates, parseFormats = options.parseFormats.length ? options.parseFormats : null, optionsValue = that._initialOptions.value, initialValue = element[0].defaultValue;\n                if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                    optionsValue = null;\n                }\n                if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                    element.attr('value', kendo.toString(optionsValue, options.format, options.culture));\n                }\n                if (form[0]) {\n                    that._resetHandler = function () {\n                        that.value(optionsValue || element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    };\n                    that._form = form.on('reset', that._resetHandler);\n                }\n            },\n            _template: function () {\n                this._ariaTemplate = $.proxy(kendo.template(this.options.ARIATemplate), this);\n            },\n            _createDateInput: function (options) {\n                if (this._dateInput) {\n                    this._dateInput.destroy();\n                    this._dateInput = null;\n                }\n                if (options.dateInput) {\n                    this._dateInput = new ui.DateInput(this.element, {\n                        culture: options.culture,\n                        format: options.format,\n                        min: options.min,\n                        max: options.max,\n                        interval: options.interval\n                    });\n                }\n            },\n            _calculateMidnight: function (min, max) {\n                return getMilliseconds(min) + getMilliseconds(max) === 0;\n            },\n            _updateARIA: function (date) {\n                var that = this;\n                var calendar = that.dateView.calendar;\n                if (that.element && that.element.length) {\n                    that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                }\n                if (calendar) {\n                    that.element.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n                }\n            },\n            _popup: function () {\n                var that = this;\n                var options = that.options;\n                var div = $('<div></div>').attr(ARIA_HIDDEN, 'true').addClass('k-datetime-container k-group k-reset').appendTo(document.body);\n                div.append(kendo.template(SINGLE_POPUP_TEMPLATE)(that.options));\n                that.popup = new ui.Popup(div, extend(options.popup, options, {\n                    name: 'Popup',\n                    isRtl: kendo.support.isRtl(that.wrapper),\n                    anchor: that.wrapper,\n                    activate: function () {\n                        if (that.options.timeView && that.options.timeView.list === 'scroll') {\n                            that.timeView.addTranslate();\n                            that.timeView.applyValue(that._value);\n                            that.timeView._updateRanges();\n                        }\n                    },\n                    open: function (e) {\n                        if (that.trigger(OPEN, {\n                                view: this.element.find('.k-date-tab').length ? 'date' : 'time',\n                                sender: that\n                            })) {\n                            e.preventDefault();\n                        }\n                        that.timeView._updateTitle();\n                    }\n                }));\n                div.on(CLICK + ns, '.k-datetime-buttongroup .k-button', $.proxy(that._groupChangeClick, that));\n                div.on(CLICK + ns, '.k-datetime-footer button.k-time-cancel', $.proxy(that._cancelClickHandler, that));\n                div.on(CLICK + ns, '.k-datetime-footer button.k-time-accept', $.proxy(that._setClickHandler, that));\n            },\n            _groupChangeClick: function (e) {\n                preventDefault(e);\n                var button = $(e.currentTarget);\n                var index = button.index();\n                if (index) {\n                    this._switchToTimeView();\n                } else {\n                    this._switchToDateView();\n                }\n                this._toggleIcons();\n            },\n            _switchToDateView: function () {\n                this.popup.element.find('.k-group-start, .k-group-end').removeClass(STATE_ACTIVE).eq(0).addClass(STATE_ACTIVE);\n                this.popup.element.find('.k-datetime-wrap').removeClass('k-time-tab').addClass('k-date-tab');\n            },\n            _switchToTimeView: function () {\n                this.timeView.addTranslate();\n                this.timeView.applyValue(this._value);\n                this.timeView._updateRanges();\n                this.popup.element.find('.k-group-start, .k-group-end').removeClass(STATE_ACTIVE).eq(1).addClass(STATE_ACTIVE);\n                this.popup.element.find('.k-datetime-wrap').removeClass('k-date-tab').addClass('k-time-tab');\n            },\n            _toggleIcons: function () {\n                this._dateIcon.toggle();\n                this._timeIcon.toggle();\n            },\n            _cancelClickHandler: function () {\n                if (this._value) {\n                    this.value(this._value);\n                    this.dateView.value(this._value);\n                }\n                this.popup.close();\n            },\n            _setClickHandler: function () {\n                var value = this._applyDateValue();\n                var time;\n                value = value || new Date();\n                time = this.timeView._currentlySelected || value;\n                this.timeView._updateCurrentlySelected();\n                value.setHours(time.getHours());\n                value.setMinutes(time.getMinutes());\n                value.setSeconds(time.getSeconds());\n                value = this._applyTimeValue(value);\n                this._change(value);\n                this.popup.close();\n            }\n        });\n        function lastTimeOption(interval) {\n            var date = new Date(2100, 0, 1);\n            date.setMinutes(-interval);\n            return date;\n        }\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n        function normalize(options) {\n            var patterns = kendo.getCulture(options.culture).calendars.standard.patterns, parseFormats = !options.parseFormats.length, timeFormat;\n            options.format = extractFormat(options.format || patterns.g);\n            options.timeFormat = timeFormat = extractFormat(options.timeFormat || patterns.t);\n            kendo.DateView.normalize(options);\n            if (parseFormats) {\n                options.parseFormats.unshift('yyyy-MM-ddTHH:mm:ss');\n            }\n            if ($.inArray(timeFormat, options.parseFormats) === -1) {\n                options.parseFormats.push(timeFormat);\n            }\n        }\n        ui.plugin(DateTimePicker);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}