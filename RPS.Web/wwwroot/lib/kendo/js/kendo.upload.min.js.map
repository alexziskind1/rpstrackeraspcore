{"version":3,"sources":["kendo.upload.js"],"names":["f","define","$","undefined","getFileName","input","map","inputFiles","file","name","join","$input","files","getAllFileInfo","stripPath","value","extension","getFileExtension","size","rawFiles","getFileInfo","rawFile","fileName","kendo","htmlEncode","fileSize","matches","match","rFileExtension","slashIndex","lastIndexOf","substr","assignGuidToFiles","unique","uid","guid","validateFiles","validationInfo","i","allowedExtensions","parseAllowedExtensions","maxFileSize","minFileSize","length","validateFileExtension","validateFileSize","extensions","ext","parsedExt","substring","toLowerCase","indexOf","validationErrors","inArray","INVALIDFILEEXTENSION","push","INVALIDMINFILESIZE","INVALIDMAXFILESIZE","getTotalFilesSizeMessage","totalSize","toFixed","shouldRemoveFileEntry","upload","multiple","wrapper","removeUploadedFile","fileEntry","eventArgs","shouldSendRemoveRequest","fileNames","_supportsRemove","data","_removeFileEntry","_submitRemove","textStatus","xhr","prevented","trigger","SUCCESS","operation","response","XMLHttpRequest","ERROR","logToConsole","responseText","tryParseJSON","onSuccess","onError","success","json","parseJSON","normalizeJSON","e","stopEvent","originalEvent","dataTransfer","dropEffect","stopPropagation","preventDefault","bindDragEventWrappers","element","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","on","Date","setInterval","sinceLastDrag","clearInterval","isFileUploadStarted","is","getFileEntry","target","closest","iframeUploadModule","formDataUploadModule","window","Widget","ui","antiForgeryTokens","NS","SELECT","UPLOAD","COMPLETE","CANCEL","CLEAR","PAUSE","RESUME","PROGRESS","REMOVE","VALIDATIONERRORS","PROGRESSHIDEDELAY","PROGRESSHIDEDURATION","headerStatusIcon","loading","warning","Upload","extend","init","options","activeInput","ns","that","this","fn","call","directory","localization","_wrapInput","_activeInput","toggle","enabled","_ns","proxy","_onParentFormSubmit","_onParentFormReset","_initUploadModule","_toggleDropZone","_onFileAction","_onClearSelected","_onUploadSelected","val","_onInputChange","events","showFileList","template","async","autoRetryAfter","bufferChunkSize","maxAutoRetries","removeVerb","autoUpload","withCredentials","accept","useArrayBuffer","select","cancel","retry","remove","pause","resume","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","invalidFiles","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusPaused","headerStatusUploaded","uploadSuccess","uploadFail","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","dropZone","initialFiles","saveUrl","_module","_supportsFormData","_async","_renderInitialFiles","syncUploadModule","setOptions","off","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","destroy","customDropZone","document","add","onPause","pauseIcon","find","removeClass","addClass","parent","onResume","playIcon","onSaveSelected","getFiles","filesData","j","allFiles","listItems","clearAllFiles","each","index","_removeFileByDomElement","removeAllFiles","removeFileByUid","_removeFileByUid","clearFileByUid","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","clone","insertAfter","prefix","hide","removeAttr","_onInputKeyDown","firstButton","keyCode","keys","TAB","shiftKey","_inputFiles","_isAsyncNonBatch","onSelect","_readDirectory","item","deferred","Deferred","dirReader","createReader","allFolderFiles","readEntries","entries","concat","resolve","reject","promise","_readFile","fullpath","fullPath","relativePath","slice","droppedFolderFiles","droppedFolderCounter","setTimeout","_proceedDroppedItems","_traverseFileTree","skipCounter","then","items","isFile","isDirectory","_onDrop","entry","dt","droppedFiles","directoryDrop","webkitGetAsEntry","splice","_filesContainValidationErrors","hasErrors","batch","currentFile","idx","_enqueueFile","_fileAction","_prepareTemplateData","templateData","_prepareDefaultSingleFileEntryTemplate","fileGroup","getFileGroup","errors","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","removeEventArgs","fileUid","fileList","appendTo","angular","elements","width","headers","allCompletedFiles","allInvalidFiles","_hideActionButtons","fileElement","actionKey","skipClear","firstActionButton","classDictionary","iconsClassDictionary","hasOwnProperty","_clearFileAction","first","next","append","show","_renderAction","_fileState","stateKey","states","uploading","text","uploaded","failed","currentState","actionClass","actionText","iconClass","empty","button","icon","hasValidationErrors","_retryClicked","_checkAllComplete","finish","onRetry","clearEventArgs","_onFileProgress","percentComplete","progressPct","prepend","_onUploadSuccess","fileInfo","_setUploadErrorState","after","_hideUploadProgress","_onUploadError","module","chunkSize","_decreasePosition","_autoRetryAfter","retries","performUpload","uploadPercentage","_updateUploadProgress","fileMetaData","metaData","totalChunks","Math","round","chunkIndex","delay","fadeOut","css","_showActionButtons","actionsWrapper","uploadButton","clearButton","_showHeaderUploadStatus","isUploading","headerUploadStatus","failedUploads","headerUploadStatusIcon","currentlyUploading","not","currentlyInvalid","currentlyFailed","currentlyPaused","concurrent","html","onAbort","FormData","windows","_userAgent","support","browser","opera","safari","_supportsDrop","userAgent","isChrome","test","isSafari","isWindowsSafari","navigator","_setupDropZone","_bindDocumentDragEventWrappers","_setupCustomDropZone","removeUrl","removeField","params","jQuery","ajax","type","dataType","dataFilter","url","traditional","error","xhrFields","wrap","prototype","filesContainErrors","relatedInput","iframes","_frameId","prepareUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","key","dataInput","fileValidation","cleanupFrame","unregisterFrame","body","prependTo","one","onIframeLoad","submit","started","contents","ex","processResponse","fakeXHR","jsonResult","statusText","status","stopFrameSubmit","id","action","stop","execCommand","grep","position","cancelled","paused","prev","sourceElement","fileEntries","prepareChunk","enqueueFiles","filesLength","webkitRelativePath","formData","createFormData","createXHR","removeFileEntry","populateFormData","FileReader","postFormData","reader","onload","fileArrayBuffer","_appendBuffer","result","err","onerror","readAsArrayBuffer","_getCurrentChunk","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","filter","prevEntry","stopUploadRequest","_increaseChunkIndex","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","chunk","serializedMetaData","JSON","stringify","raiseError","parseSuccess","cleanupFileEntry","_resetChunkIndex","uploadComplete","isUploadButtonVisible","loaded","total","abort","contentType","ceil","uploadUid","_decreaseChunkIndex","methodToInvoke","oldPosition","_getChunker","mozSlice","webkitSlice","plugin","amd","a1","a2","a3"],"mappings":"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","file":"kendo.upload.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.upload', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'upload',\n        name: 'Upload',\n        category: 'web',\n        description: 'The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, antiForgeryTokens = kendo.antiForgeryTokens, logToConsole = kendo.logToConsole, rFileExtension = /\\.([^\\.]+)$/, NS = '.kendoUpload', SELECT = 'select', UPLOAD = 'upload', SUCCESS = 'success', ERROR = 'error', COMPLETE = 'complete', CANCEL = 'cancel', CLEAR = 'clear', PAUSE = 'pause', RESUME = 'resume', PROGRESS = 'progress', REMOVE = 'remove', VALIDATIONERRORS = 'validationErrors', INVALIDMAXFILESIZE = 'invalidMaxFileSize', INVALIDMINFILESIZE = 'invalidMinFileSize', INVALIDFILEEXTENSION = 'invalidFileExtension', PROGRESSHIDEDELAY = 1000, PROGRESSHIDEDURATION = 2000;\n        var headerStatusIcon = {\n            loading: 'k-i-upload',\n            warning: 'k-i-warning',\n            success: 'k-i-check'\n        };\n        var Upload = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.name = element.name;\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n                that.localization = that.options.localization;\n                var activeInput = that.element;\n                that.wrapper = activeInput.closest('.k-upload');\n                if (that.wrapper.length === 0) {\n                    that.wrapper = that._wrapInput(activeInput);\n                }\n                that._activeInput(activeInput);\n                that.toggle(that.options.enabled);\n                var ns = that._ns = NS + '-' + kendo.guid();\n                activeInput.closest('form').on('submit' + ns, $.proxy(that._onParentFormSubmit, that)).on('reset' + ns, $.proxy(that._onParentFormReset, that));\n                that._initUploadModule();\n                that._toggleDropZone();\n                that.wrapper.on('click', '.k-upload-action', $.proxy(that._onFileAction, that)).on('click', '.k-clear-selected', $.proxy(that._onClearSelected, that)).on('click', '.k-upload-selected', $.proxy(that._onUploadSelected, that));\n                if (that.element.val()) {\n                    that._onInputChange({ target: that.element });\n                }\n            },\n            events: [\n                SELECT,\n                UPLOAD,\n                SUCCESS,\n                ERROR,\n                COMPLETE,\n                CANCEL,\n                CLEAR,\n                PROGRESS,\n                REMOVE,\n                PAUSE,\n                RESUME\n            ],\n            options: {\n                name: 'Upload',\n                enabled: true,\n                multiple: true,\n                directory: false,\n                showFileList: true,\n                template: '',\n                files: [],\n                async: {\n                    autoRetryAfter: 0,\n                    bufferChunkSize: 10000000,\n                    maxAutoRetries: 1,\n                    removeVerb: 'POST',\n                    autoUpload: true,\n                    withCredentials: true,\n                    accept: '*/*; q=0.5, application/json',\n                    useArrayBuffer: false\n                },\n                localization: {\n                    'select': 'Select files...',\n                    'cancel': 'Cancel',\n                    'retry': 'Retry',\n                    'remove': 'Remove',\n                    'pause': 'Pause',\n                    'resume': 'Resume',\n                    'clearSelectedFiles': 'Clear',\n                    'uploadSelectedFiles': 'Upload',\n                    'dropFilesHere': 'Drop files here to upload',\n                    'invalidFiles': 'Invalid file(s). Please check file upload requirements.',\n                    'statusUploading': 'uploading',\n                    'statusUploaded': 'uploaded',\n                    'statusWarning': 'warning',\n                    'statusFailed': 'failed',\n                    'headerStatusUploading': 'Uploading...',\n                    'headerStatusPaused': 'Paused',\n                    'headerStatusUploaded': 'Done',\n                    'uploadSuccess': 'File(s) uploaded successfully.',\n                    'uploadFail': 'File(s) failed to upload.',\n                    'invalidMaxFileSize': 'File size too large.',\n                    'invalidMinFileSize': 'File size too small.',\n                    'invalidFileExtension': 'File type not allowed.'\n                },\n                validation: {\n                    allowedExtensions: [],\n                    maxFileSize: 0,\n                    minFileSize: 0\n                },\n                dropZone: ''\n            },\n            _initUploadModule: function () {\n                var that = this, options = that.options;\n                if (options.async.saveUrl) {\n                    that._module = that._supportsFormData() ? new formDataUploadModule(that) : new iframeUploadModule(that);\n                    that._async = true;\n                    var initialFiles = options.files;\n                    if (initialFiles.length > 0) {\n                        that._renderInitialFiles(initialFiles);\n                    }\n                } else {\n                    that._module = new syncUploadModule(that);\n                }\n            },\n            setOptions: function (options) {\n                var that = this, activeInput = that.element;\n                $(that.options.dropZone).off(that._ns);\n                Widget.fn.setOptions.call(that, options);\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n                activeInput.attr('multiple', that._supportsMultiple() ? that.multiple : false);\n                if (that.directory) {\n                    activeInput.attr('webkitdirectory', that.directory);\n                    activeInput.attr('directory', that.directory);\n                }\n                that.toggle(that.options.enabled);\n                that._initUploadModule();\n                that._toggleDropZone();\n            },\n            enable: function (enable) {\n                enable = typeof enable === 'undefined' ? true : enable;\n                this.toggle(enable);\n            },\n            disable: function () {\n                this.toggle(false);\n            },\n            toggle: function (enable) {\n                enable = typeof enable === 'undefined' ? enable : !enable;\n                this.wrapper.toggleClass('k-state-disabled', enable);\n                this.element.prop('disabled', enable);\n            },\n            focus: function () {\n                this.element.focus();\n            },\n            destroy: function () {\n                var that = this;\n                var customDropZone = $(that.options.dropZone);\n                $(document).add($('.k-dropzone', that.wrapper)).add(that.wrapper.closest('form')).off(that._ns);\n                if (customDropZone.length > 0) {\n                    customDropZone.off(that._ns);\n                }\n                $(that.element).off(NS);\n                Widget.fn.destroy.call(that);\n            },\n            pause: function (fileEntry) {\n                this._module.onPause({ target: $(fileEntry, this.wrapper) });\n                var pauseIcon = fileEntry.find('.k-i-pause-sm');\n                pauseIcon.removeClass('k-i-pause-sm').addClass('k-i-play-sm').attr('title', this.localization.resume);\n                $(pauseIcon).parent().attr('aria-label', this.localization.resume);\n            },\n            resume: function (fileEntry) {\n                this._module.onResume({ target: $(fileEntry, this.wrapper) });\n                var playIcon = fileEntry.find('.k-i-play-sm');\n                playIcon.removeClass('k-i-play-sm').addClass('k-i-pause-sm').attr('title', this.localization.pause);\n                $(playIcon).parent().attr('aria-label', this.localization.pause);\n            },\n            upload: function () {\n                var that = this;\n                that._module.onSaveSelected();\n            },\n            getFiles: function () {\n                var that = this;\n                var filesData;\n                var allFiles = [];\n                var listItems = that.wrapper.find('.k-file');\n                for (var i = 0; i < listItems.length; i++) {\n                    filesData = $(listItems[i]).data('fileNames');\n                    if (filesData) {\n                        for (var j = 0; j < filesData.length; j++) {\n                            allFiles.push(filesData[j]);\n                        }\n                    }\n                }\n                return allFiles;\n            },\n            clearAllFiles: function () {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                files.each(function (index, file) {\n                    that._removeFileByDomElement(file, false);\n                });\n            },\n            removeAllFiles: function () {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                files.each(function (index, file) {\n                    that._removeFileByDomElement(file, true);\n                });\n            },\n            removeFileByUid: function (uid) {\n                this._removeFileByUid(uid, true);\n            },\n            clearFileByUid: function (uid) {\n                this._removeFileByUid(uid, false);\n            },\n            _removeFileByUid: function (uid, shouldSendRemoveRequest) {\n                var that = this;\n                var fileEntry;\n                if (typeof uid !== 'string') {\n                    return;\n                }\n                fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n                if (fileEntry.length > 0) {\n                    that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n                }\n            },\n            clearFile: function (callback) {\n                this._removeFile(callback, false);\n            },\n            removeFile: function (callback) {\n                this._removeFile(callback, true);\n            },\n            _removeFile: function (callback, shouldSendRemoveRequest) {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                var fileData;\n                if (typeof callback === 'function') {\n                    files.each(function (index, file) {\n                        fileData = $(file).data('fileNames');\n                        if (callback(fileData)) {\n                            that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                        }\n                    });\n                }\n            },\n            _removeFileByDomElement: function (fileEntry, shouldSendRemoveRequest) {\n                var that = this;\n                var fileData = { target: $(fileEntry, that.wrapper) };\n                var allFiles;\n                if (that.options.async.saveUrl) {\n                    if ($(fileEntry).hasClass('k-file-progress')) {\n                        that._module.onCancel(fileData);\n                    } else {\n                        that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                    }\n                    allFiles = $('.k-file', that.wrapper);\n                    if (allFiles.length === 0) {\n                        that._hideHeaderUploadstatus();\n                    } else {\n                        that._updateHeaderUploadStatus();\n                    }\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n            },\n            _addInput: function (sourceInput) {\n                if (!sourceInput[0].nodeType) {\n                    return;\n                }\n                var that = this, input = sourceInput.clone().val('');\n                input.insertAfter(that.element).data('kendo' + that.options.prefix + that.options.name, that);\n                $(that.element).hide().attr('tabindex', '-1').removeAttr('id').off(NS);\n                that._activeInput(input);\n                that.element.focus();\n            },\n            _activeInput: function (input) {\n                var that = this, wrapper = that.wrapper;\n                that.element = input;\n                if (that.directory) {\n                    input.attr('webkitdirectory', that.directory);\n                    input.attr('directory', that.directory);\n                }\n                input.attr('multiple', that._supportsMultiple() ? that.multiple : false).attr('autocomplete', 'off').on('click' + NS, function (e) {\n                    if (wrapper.hasClass('k-state-disabled')) {\n                        e.preventDefault();\n                    }\n                }).on('focus' + NS, function () {\n                    $(this).parent().addClass('k-state-focused');\n                }).on('blur' + NS, function () {\n                    $(this).parent().removeClass('k-state-focused');\n                }).on('change' + NS, $.proxy(that._onInputChange, that)).on('keydown' + NS, $.proxy(that._onInputKeyDown, that));\n            },\n            _onInputKeyDown: function (e) {\n                var that = this;\n                var firstButton = that.wrapper.find('.k-upload-action:visible:first');\n                if (e.keyCode === kendo.keys.TAB && firstButton.length > 0 && !e.shiftKey) {\n                    e.preventDefault();\n                    firstButton.focus();\n                }\n            },\n            _onInputChange: function (e) {\n                var that = this;\n                var input = $(e.target);\n                var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n                validateFiles(files, that.options.validation);\n                var prevented = that.trigger(SELECT, { files: files });\n                if (prevented) {\n                    that._addInput(input);\n                    input.remove();\n                } else {\n                    that._module.onSelect({ target: input }, files);\n                }\n            },\n            _readDirectory: function (item) {\n                var deferred = new $.Deferred();\n                var dirReader = item.createReader();\n                var allFolderFiles = [];\n                var readEntries = function () {\n                    dirReader.readEntries(function (entries) {\n                        if (!entries.length) {\n                            deferred.resolve(allFolderFiles);\n                        } else {\n                            allFolderFiles = allFolderFiles.concat(entries);\n                            readEntries();\n                        }\n                    }, deferred.reject);\n                };\n                readEntries();\n                return deferred.promise();\n            },\n            _readFile: function (item) {\n                var that = this;\n                var fullpath = item.fullPath;\n                item.file(function (file) {\n                    file.relativePath = fullpath.slice(1);\n                    that.droppedFolderFiles.push(file);\n                    that.droppedFolderCounter--;\n                    if (that.droppedFolderCounter === 0) {\n                        setTimeout(function () {\n                            if (that.droppedFolderCounter === 0) {\n                                if (that.droppedFolderFiles.length) {\n                                    that._proceedDroppedItems(that.droppedFolderFiles);\n                                    that.droppedFolderFiles = [];\n                                }\n                            }\n                        }, 0);\n                    }\n                }, function () {\n                    logToConsole('File error.');\n                });\n            },\n            _traverseFileTree: function (item, skipCounter) {\n                var that = this;\n                if (!skipCounter) {\n                    that.droppedFolderCounter--;\n                }\n                this._readDirectory(item).then(function (items) {\n                    that.droppedFolderCounter += items.length;\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].isFile) {\n                            that._readFile(items[i]);\n                        } else if (items[i].isDirectory) {\n                            that._traverseFileTree(items[i]);\n                        }\n                    }\n                });\n            },\n            _onDrop: function (e) {\n                var dt = e.originalEvent.dataTransfer;\n                var that = this;\n                var droppedFiles = dt.files;\n                var length;\n                stopEvent(e);\n                if (that.options.directoryDrop && dt.items) {\n                    length = dt.items.length;\n                    that.droppedFolderCounter = 0;\n                    that.droppedFolderFiles = [];\n                    for (var i = 0; i < length; i++) {\n                        if (dt.items[i].webkitGetAsEntry) {\n                            var entry = dt.items[i].webkitGetAsEntry();\n                            if (entry.isDirectory) {\n                                that._traverseFileTree(entry, true);\n                            } else if (entry.isFile) {\n                                that.droppedFolderFiles.push(dt.files[i]);\n                            }\n                        } else {\n                            that._proceedDroppedItems(droppedFiles);\n                        }\n                    }\n                } else {\n                    that._proceedDroppedItems(droppedFiles);\n                }\n            },\n            _proceedDroppedItems: function (droppedFiles) {\n                var that = this;\n                var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n                if (droppedFiles.length > 0 && !that.wrapper.hasClass('k-state-disabled')) {\n                    if (!that.multiple && files.length > 1) {\n                        files.splice(1, files.length - 1);\n                    }\n                    validateFiles(files, that.options.validation);\n                    var prevented = that.trigger(SELECT, { files: files });\n                    if (!prevented) {\n                        that._module.onSelect({ target: $('.k-dropzone', that.wrapper) }, files);\n                    }\n                }\n            },\n            _filesContainValidationErrors: function (files) {\n                var hasErrors = false;\n                $(files).each(function (index, file) {\n                    if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                        hasErrors = true;\n                        return false;\n                    }\n                });\n                return hasErrors;\n            },\n            _isAsyncNonBatch: function () {\n                return this._async && !this.options.async.batch || false;\n            },\n            _renderInitialFiles: function (files) {\n                var that = this;\n                var idx = 0;\n                files = assignGuidToFiles(files, true);\n                for (idx = 0; idx < files.length; idx++) {\n                    var currentFile = files[idx];\n                    var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [currentFile] });\n                    fileEntry.addClass('k-file-success').data('files', [files[idx]]);\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    }\n                }\n            },\n            _prepareTemplateData: function (name, data) {\n                var filesData = data.fileNames, templateData = {}, totalSize = 0, idx = 0;\n                for (idx = 0; idx < filesData.length; idx++) {\n                    totalSize += filesData[idx].size;\n                }\n                templateData.name = name;\n                templateData.size = totalSize;\n                templateData.files = data.fileNames;\n                return templateData;\n            },\n            _prepareDefaultSingleFileEntryTemplate: function (data) {\n                var that = this;\n                var file = data.fileNames[0];\n                var fileSize = getTotalFilesSizeMessage(data.fileNames);\n                var fileGroup = kendo.getFileGroup(file.extension, true);\n                var errors = file[VALIDATIONERRORS];\n                var template = '';\n                if (errors && errors.length > 0) {\n                    template += '<li class=\\'k-file k-file-invalid\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-file-invalid-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-' + fileGroup + '\\'></span>' + '<span class=\\'k-file-state\\'></span>' + '</span>' + '<span class=\\'k-file-name-size-wrapper\\'>' + '<span class=\\'k-file-name k-file-name-invalid\\' title=\\'' + file.name + '\\'>' + file.name + '</span>' + '<span class=\\'k-file-validation-message k-text-error\\'>' + that.localization[errors[0]] + '</span>' + '</span>';\n                } else {\n                    template += '<li class=\\'k-file\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-file-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-' + fileGroup + '\\'></span>' + '<span class=\\'k-file-state\\'></span>' + '</span>' + '<span class=\\'k-file-name-size-wrapper\\'><span class=\\'k-file-name\\' title=\\'' + file.name + '\\'>' + file.name + '</span>' + '<span class=\\'k-file-size\\'>' + fileSize + '</span></span>';\n                }\n                template += '<strong class=\\'k-upload-status\\'></strong>';\n                return $(template);\n            },\n            _prepareDefaultMultipleFileEntriesTemplate: function (data) {\n                var that = this;\n                var files = data.fileNames;\n                var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n                var totalFileSize = getTotalFilesSizeMessage(files);\n                var template = '';\n                var i, currentFile;\n                if (filesHaveValidationErrors) {\n                    template += '<li class=\\'k-file k-file-invalid\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-multiple-files-invalid-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-files\\'></span>';\n                } else {\n                    template += '<li class=\\'k-file\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-multiple-files-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-files\\'></span>';\n                }\n                template += '<span class=\\'k-file-state\\'></span></span>';\n                files.sort(function (a, b) {\n                    if (a[VALIDATIONERRORS]) {\n                        return -1;\n                    }\n                    if (b[VALIDATIONERRORS]) {\n                        return 1;\n                    }\n                    return 0;\n                });\n                template += '<span class=\\'k-multiple-files-wrapper\\'>';\n                for (i = 0; i < files.length; i++) {\n                    currentFile = files[i];\n                    var fileSize = getTotalFilesSizeMessage([currentFile]);\n                    template += '<span class=\\'k-file-name-size-wrapper\\'>';\n                    if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                        template += '<span class=\\'k-file-name k-file-name-invalid\\' title=\\'' + currentFile.name + '\\'>' + currentFile.name + '</span>';\n                    } else {\n                        template += '<span class=\\'k-file-name\\' title=\\'' + currentFile.name + '\\'>' + currentFile.name + '</span>';\n                    }\n                    template += '<span class=\\'k-file-size\\'>' + fileSize + '</span></span>';\n                }\n                if (filesHaveValidationErrors) {\n                    template += '<span class=\\'k-file-validation-message k-text-error\\'>' + that.localization.invalidFiles + '</span>';\n                } else {\n                    template += '<span class=\\'k-file-information\\'>Total: ' + files.length + ' files, ' + totalFileSize + '</span>';\n                }\n                template += '</span><strong class=\\'k-upload-status\\'></strong>';\n                return $(template);\n            },\n            _enqueueFile: function (name, data) {\n                var that = this;\n                var existingFileEntries;\n                var fileEntry;\n                var fileUid = data.fileNames[0].uid;\n                var fileList = $('.k-upload-files', that.wrapper);\n                var options = that.options;\n                var template = options.template;\n                var templateData;\n                var removeEventArgs;\n                if (fileList.length === 0) {\n                    fileList = $('<ul class=\\'k-upload-files k-reset\\'></ul>').appendTo(that.wrapper);\n                    if (!that.options.showFileList) {\n                        fileList.hide();\n                    }\n                    that.wrapper.removeClass('k-upload-empty');\n                }\n                existingFileEntries = $('.k-file', fileList);\n                if (!template) {\n                    if (data.fileNames.length === 1) {\n                        fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                    } else {\n                        fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                    }\n                } else {\n                    templateData = that._prepareTemplateData(name, data);\n                    template = kendo.template(template);\n                    fileEntry = $('<li class=\\'k-file\\'>' + template(templateData) + '</li>');\n                    fileEntry.find('.k-upload-action').addClass('k-button k-button-icon k-flat');\n                    that.angular('compile', function () {\n                        return {\n                            elements: fileEntry,\n                            data: [templateData]\n                        };\n                    });\n                }\n                fileEntry.attr(kendo.attr('uid'), fileUid).appendTo(fileList).data(data);\n                if (!that._async) {\n                    $('.k-progress', fileEntry).width('100%');\n                }\n                if (!that.multiple && existingFileEntries.length > 0) {\n                    removeEventArgs = {\n                        files: existingFileEntries.data('fileNames'),\n                        headers: {}\n                    };\n                    if (!that.trigger(REMOVE, removeEventArgs)) {\n                        that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                    }\n                }\n                return fileEntry;\n            },\n            _removeFileEntry: function (fileEntry) {\n                var that = this;\n                var fileList = fileEntry.closest('.k-upload-files');\n                var allFiles, allCompletedFiles, allInvalidFiles;\n                fileEntry.remove();\n                allFiles = $('.k-file', fileList);\n                allCompletedFiles = $('.k-file-success, .k-file-error', fileList);\n                allInvalidFiles = $('.k-file-invalid', fileList);\n                if (allCompletedFiles.length === allFiles.length || allInvalidFiles.length === allFiles.length) {\n                    this._hideActionButtons();\n                }\n                if (allFiles.length === 0) {\n                    fileList.remove();\n                    that.wrapper.addClass('k-upload-empty');\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            },\n            _fileAction: function (fileElement, actionKey, skipClear) {\n                var classDictionary = {\n                    remove: 'k-i-x',\n                    cancel: 'k-i-cancel',\n                    retry: 'k-i-retry',\n                    pause: 'k-i-pause-sm'\n                };\n                var iconsClassDictionary = {\n                    remove: 'k-i-close',\n                    cancel: 'k-i-cancel',\n                    retry: 'k-i-reload-sm',\n                    pause: 'k-i-pause-sm'\n                };\n                var firstActionButton;\n                if (!classDictionary.hasOwnProperty(actionKey)) {\n                    return;\n                }\n                if (!skipClear) {\n                    this._clearFileAction(fileElement);\n                }\n                if (!this.options.template) {\n                    if (!skipClear) {\n                        fileElement.find('.k-upload-status .k-upload-action').remove();\n                    }\n                    fileElement.find('.k-upload-status').append(this._renderAction(classDictionary[actionKey], this.localization[actionKey], iconsClassDictionary[actionKey]));\n                } else {\n                    firstActionButton = fileElement.find('.k-upload-action').first();\n                    if (!firstActionButton.find('.k-icon').length) {\n                        firstActionButton.addClass('k-button').append('<span class=\\'k-icon ' + iconsClassDictionary[actionKey] + ' ' + classDictionary[actionKey] + '\\' title=\\'' + this.localization[actionKey] + '\\'' + 'aria-label=\\'' + this.localization[actionKey] + '\\'></span>').show();\n                    } else if (firstActionButton.next('.k-upload-action').length) {\n                        firstActionButton.next('.k-upload-action').addClass('k-button').append('<span class=\\'k-icon ' + iconsClassDictionary[actionKey] + ' ' + classDictionary[actionKey] + '\\' title=\\'' + this.localization[actionKey] + '\\'' + 'aria-label=\\'' + this.localization[actionKey] + '\\'></span>').show();\n                    }\n                }\n            },\n            _fileState: function (fileEntry, stateKey) {\n                var localization = this.localization, states = {\n                        uploading: { text: localization.statusUploading },\n                        uploaded: { text: localization.statusUploaded },\n                        failed: { text: localization.statusFailed }\n                    }, currentState = states[stateKey];\n                if (currentState) {\n                    $('span.k-file-state', fileEntry).text(currentState.text);\n                }\n            },\n            _renderAction: function (actionClass, actionText, iconClass) {\n                if (actionClass !== '') {\n                    return $('<button type=\\'button\\' class=\\'k-button k-button-icon k-flat k-upload-action\\' aria-label=\\'' + actionText + '\\'>' + '<span class=\\'k-icon ' + iconClass + ' ' + actionClass + '\\' title=\\'' + actionText + '\\'></span>' + '</button>').on('focus', function () {\n                        $(this).addClass('k-state-focused');\n                    }).on('blur', function () {\n                        $(this).removeClass('k-state-focused');\n                    });\n                } else {\n                    return $('<button type=\\'button\\' class=\\'k-button\\'>' + actionText + '</button>');\n                }\n            },\n            _clearFileAction: function (fileElement) {\n                $('.k-upload-action', fileElement).empty().hide();\n            },\n            _onFileAction: function (e) {\n                var that = this;\n                if (!that.wrapper.hasClass('k-state-disabled')) {\n                    var button = $(e.target).closest('.k-upload-action');\n                    var icon = button.find('.k-icon');\n                    var fileEntry = button.closest('.k-file');\n                    var files = fileEntry.data('fileNames');\n                    var hasValidationErrors = that._filesContainValidationErrors(files);\n                    var eventArgs = {\n                        files: files,\n                        headers: {}\n                    };\n                    that._retryClicked = false;\n                    if (icon.hasClass('k-i-x')) {\n                        if (!that.trigger(REMOVE, eventArgs)) {\n                            that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        }\n                    } else if (icon.hasClass('k-i-cancel')) {\n                        that.trigger(CANCEL, eventArgs);\n                        that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                        that._checkAllComplete();\n                        that._updateHeaderUploadStatus();\n                    } else if (icon.hasClass('k-i-pause-sm')) {\n                        that.trigger(PAUSE, eventArgs);\n                        that.pause(fileEntry);\n                        that._updateHeaderUploadStatus();\n                    } else if (icon.hasClass('k-i-play-sm')) {\n                        that.trigger(RESUME, eventArgs);\n                        that.resume(fileEntry);\n                    } else if (icon.hasClass('k-i-retry')) {\n                        $('.k-i-warning', fileEntry).remove();\n                        $('.k-progressbar', fileEntry).finish().show();\n                        that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                        that._retryClicked = true;\n                    }\n                }\n                return false;\n            },\n            _onUploadSelected: function () {\n                var that = this;\n                var wrapper = that.wrapper;\n                if (!wrapper.hasClass('k-state-disabled')) {\n                    this._module.onSaveSelected();\n                }\n                return false;\n            },\n            _onClearSelected: function () {\n                var that = this;\n                var wrapper = that.wrapper;\n                var clearEventArgs = {};\n                if (!wrapper.hasClass('k-state-disabled') && !that.trigger(CLEAR, clearEventArgs)) {\n                    that.clearAllFiles();\n                }\n                return false;\n            },\n            _onFileProgress: function (e, percentComplete) {\n                var progressPct;\n                if (percentComplete > 100) {\n                    percentComplete = 100;\n                }\n                $('.k-progressbar', e.target).removeClass('k-hidden');\n                if (!this.options.template) {\n                    progressPct = $('.k-upload-pct', e.target);\n                    if (progressPct.length === 0) {\n                        $('.k-upload-status', e.target).prepend('<span class=\\'k-upload-pct\\'></span>');\n                    }\n                    if (percentComplete !== 100) {\n                        $('.k-upload-pct', e.target).text(percentComplete + '%');\n                    } else {\n                        $('.k-upload-pct', e.target).remove();\n                    }\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                } else {\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                }\n                this.trigger(PROGRESS, {\n                    files: getFileEntry(e).data('fileNames'),\n                    percentComplete: percentComplete\n                });\n            },\n            _onUploadSuccess: function (e, response, xhr) {\n                var that = this;\n                var fileEntry = getFileEntry(e);\n                var files = fileEntry.data('fileNames');\n                var fileInfo = fileEntry.find('.k-file-information');\n                var fileSize = fileEntry.find('.k-file-size');\n                var prevented = that.trigger(SUCCESS, {\n                    files: fileEntry.data('fileNames'),\n                    response: response,\n                    operation: 'upload',\n                    XMLHttpRequest: xhr\n                });\n                if (prevented) {\n                    that._setUploadErrorState(fileEntry);\n                } else {\n                    that._fileState(fileEntry, 'uploaded');\n                    fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n                    if (fileInfo.length > 0) {\n                        fileInfo.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-success\">' + files.length + ' ' + that.localization.uploadSuccess + '</span>');\n                    } else if (fileSize.length > 0) {\n                        fileSize.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-success\">' + that.localization.uploadSuccess + '</span>');\n                    }\n                    that._updateHeaderUploadStatus();\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    } else {\n                        that._clearFileAction(fileEntry);\n                    }\n                }\n                that._hideUploadProgress(fileEntry);\n                that._checkAllComplete();\n            },\n            _onUploadError: function (e, xhr) {\n                var that = this;\n                var module = that._module;\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data('uid');\n                that._setUploadErrorState(fileEntry);\n                that.trigger(ERROR, {\n                    operation: 'upload',\n                    files: fileEntry.data('fileNames'),\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n                if (!that.options.async.chunkSize) {\n                    that._hideUploadProgress(fileEntry);\n                } else {\n                    if (module._decreasePosition) {\n                        module._decreasePosition(fileUid);\n                    }\n                }\n                that._checkAllComplete();\n                if (this.options.async.autoRetryAfter) {\n                    this._autoRetryAfter(fileEntry);\n                }\n            },\n            _autoRetryAfter: function (fileEntry) {\n                var that = this;\n                var retries = this._module.retries;\n                if (!retries) {\n                    return;\n                }\n                if (!retries[fileEntry.data('uid')]) {\n                    retries[fileEntry.data('uid')] = 1;\n                }\n                if (retries[fileEntry.data('uid')] <= this.options.async.maxAutoRetries) {\n                    retries[fileEntry.data('uid')]++;\n                    setTimeout(function () {\n                        that._module.performUpload(fileEntry);\n                    }, this.options.async.autoRetryAfter);\n                }\n            },\n            _setUploadErrorState: function (fileEntry) {\n                var that = this, uploadPercentage, files = fileEntry.data('fileNames'), fileInfo = fileEntry.find('.k-file-information'), fileSize = fileEntry.find('.k-file-size');\n                that._fileState(fileEntry, 'failed');\n                fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n                if (fileInfo.length > 0) {\n                    fileInfo.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-error\">' + files.length + ' ' + that.localization.uploadFail + '</span>');\n                } else if (fileSize.length > 0) {\n                    fileSize.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-error\">' + that.localization.uploadFail + '</span>');\n                }\n                that._updateUploadProgress(fileEntry);\n                uploadPercentage = $('.k-upload-pct', fileEntry);\n                if (uploadPercentage.length > 0) {\n                    uploadPercentage.remove();\n                }\n                this._updateHeaderUploadStatus();\n                this._fileAction(fileEntry, 'retry');\n                this._fileAction(fileEntry, REMOVE, true);\n                if (that._retryClicked) {\n                    fileEntry.find('.k-i-retry').parent().focus();\n                }\n            },\n            _updateUploadProgress: function (fileEntry) {\n                var that = this;\n                if (!that.options.async.chunkSize) {\n                    $('.k-progress', fileEntry).width('100%');\n                } else {\n                    var fileUid = fileEntry.data('uid');\n                    if (that._module.metaData) {\n                        var fileMetaData = that._module.metaData[fileUid];\n                        if (fileMetaData) {\n                            var percentComplete = fileMetaData.totalChunks ? Math.round(fileMetaData.chunkIndex / fileMetaData.totalChunks * 100) : 100;\n                            that._onFileProgress({ target: $(fileEntry, that.wrapper) }, percentComplete);\n                        }\n                    }\n                }\n            },\n            _hideUploadProgress: function (fileEntry) {\n                $('.k-progressbar', fileEntry).delay(PROGRESSHIDEDELAY).fadeOut(PROGRESSHIDEDURATION, function () {\n                    $(this).find('.k-progress').css('width', '0%');\n                });\n            },\n            _showActionButtons: function () {\n                var that = this;\n                var actionsWrapper = $('.k-action-buttons', that.wrapper);\n                var uploadButton = $('.k-upload-selected', that.wrapper);\n                var clearButton = $('.k-clear-selected', that.wrapper);\n                if (uploadButton.length === 0) {\n                    uploadButton = that._renderAction('', this.localization.uploadSelectedFiles).addClass('k-upload-selected').addClass('k-primary');\n                    clearButton = that._renderAction('', this.localization.clearSelectedFiles).addClass('k-clear-selected');\n                }\n                if (!actionsWrapper.length) {\n                    actionsWrapper = $('<div />').addClass('k-action-buttons').append(clearButton, uploadButton);\n                }\n                this.wrapper.append(actionsWrapper);\n            },\n            _hideActionButtons: function () {\n                $('.k-action-buttons', this.wrapper).remove();\n            },\n            _showHeaderUploadStatus: function (isUploading) {\n                var that = this;\n                var localization = that.localization;\n                var dropZone = $('.k-dropzone', that.wrapper);\n                var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                if (headerUploadStatus.length !== 0) {\n                    headerUploadStatus.remove();\n                }\n                $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n                headerUploadStatus = '<strong class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></strong>';\n                if (isUploading) {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploading);\n                    headerUploadStatus.find('.k-icon').addClass(headerStatusIcon.loading);\n                } else {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploaded);\n                    headerUploadStatus.find('.k-icon').addClass(headerStatusIcon.warning);\n                }\n                if (dropZone.length > 0) {\n                    dropZone.append(headerUploadStatus);\n                } else {\n                    $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n                }\n            },\n            _updateHeaderUploadStatus: function () {\n                var that = this;\n                var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n                var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error, .k-file-invalid');\n                var currentlyInvalid = $('.k-file-invalid', that.wrapper);\n                var currentlyFailed = $('.k-file-error', that.wrapper);\n                var currentlyPaused = $('.k-file', that.wrapper).find('.k-i-play-sm');\n                var failedUploads, headerUploadStatusIcon;\n                if (currentlyPaused.length && (currentlyPaused.length === currentlyUploading.length || !that.options.async.concurrent)) {\n                    headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass().addClass('k-icon').addClass('k-i-pause-sm');\n                    headerUploadStatus.html(headerUploadStatusIcon).append(that.localization.headerStatusPaused);\n                } else if (currentlyUploading.length === 0 || currentlyInvalid.length > 0 || currentlyFailed.length > 0) {\n                    failedUploads = $('.k-file.k-file-error, .k-file.k-file-invalid', that.wrapper);\n                    headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                    headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass().addClass('k-icon').addClass(failedUploads.length !== 0 ? headerStatusIcon.warning : headerStatusIcon.success);\n                    headerUploadStatus.html(headerUploadStatusIcon).append(that.localization.headerStatusUploaded);\n                }\n            },\n            _hideHeaderUploadstatus: function () {\n                var that = this, dropZone = that.options.dropZone;\n                $('.k-upload-status-total', this.wrapper).remove();\n                if (dropZone === '') {\n                    $('.k-dropzone-hint', that.wrapper).removeClass('k-hidden');\n                }\n            },\n            _onParentFormSubmit: function () {\n                var upload = this, element = upload.element;\n                if (typeof this._module.onAbort !== 'undefined') {\n                    this._module.onAbort();\n                }\n                if (!element.value) {\n                    var input = $(element);\n                    input.attr('disabled', 'disabled');\n                    window.setTimeout(function () {\n                        input.removeAttr('disabled');\n                    }, 0);\n                }\n            },\n            _onParentFormReset: function () {\n                $('.k-upload-files', this.wrapper).remove();\n            },\n            _supportsFormData: function () {\n                return typeof FormData != 'undefined';\n            },\n            _supportsMultiple: function () {\n                var windows = this._userAgent().indexOf('Windows') > -1;\n                return !kendo.support.browser.opera && !(kendo.support.browser.safari && windows);\n            },\n            _supportsDrop: function () {\n                var userAgent = this._userAgent().toLowerCase();\n                var isChrome = /chrome/.test(userAgent);\n                var isSafari = !isChrome && /safari/.test(userAgent);\n                var isWindowsSafari = isSafari && /windows/.test(userAgent);\n                return !isWindowsSafari && this._supportsFormData() && this.options.async.saveUrl;\n            },\n            _userAgent: function () {\n                return navigator.userAgent;\n            },\n            _setupDropZone: function () {\n                var that = this;\n                var ns = that._ns;\n                var dropZone = $('.k-dropzone', that.wrapper).on('dragenter' + ns, stopEvent).on('dragover' + ns, function (e) {\n                    if (e.originalEvent) {\n                        e.originalEvent.dataTransfer.dropEffect = 'copy';\n                    }\n                    e.preventDefault();\n                }).on('drop' + ns, $.proxy(that._onDrop, that));\n                if (!dropZone.find('.k-dropzone-hint').length) {\n                    dropZone.append($('<em class=\\'k-dropzone-hint\\'>' + that.localization.dropFilesHere + '</em>'));\n                }\n                bindDragEventWrappers(dropZone, ns, function () {\n                    if (!dropZone.closest('.k-upload').hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-hovered');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-hovered');\n                });\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n            _setupCustomDropZone: function () {\n                var that = this;\n                var dropZone = $(that.options.dropZone);\n                if (!that.wrapper.find('.k-dropzone-hint').length) {\n                    $('.k-dropzone', that.wrapper).append($('<em class=\\'k-dropzone-hint k-hidden\\'>' + that.localization.dropFilesHere + '</em>'));\n                } else {\n                    $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n                }\n                var ns = that._ns;\n                dropZone.on('dragenter' + ns, stopEvent).on('dragover' + ns, function (e) {\n                    if (e.originalEvent) {\n                        e.originalEvent.dataTransfer.dropEffect = 'copy';\n                    }\n                    e.preventDefault();\n                }).on('drop' + ns, $.proxy(that._onDrop, that));\n                bindDragEventWrappers(dropZone, ns, function (e) {\n                    if (!that.wrapper.hasClass('k-state-disabled')) {\n                        dropZone.removeClass('k-dropzone-hovered');\n                        dropZone.addClass('k-dropzone-hovered');\n                        $(e.target).addClass('k-dropzone-hovered');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-hovered');\n                    dropZone.find('.k-dropzone-hovered').removeClass('k-dropzone-hovered');\n                });\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n            _bindDocumentDragEventWrappers: function (dropZone) {\n                var that = this;\n                var ns = that._ns;\n                bindDragEventWrappers($(document), ns, function () {\n                    if (!that.wrapper.hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-active');\n                        dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                        dropZone.find('.k-dropzone-hint').removeClass('k-hidden');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-active');\n                    dropZone.find('.k-dropzone-hint').addClass('k-hidden');\n                    if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                        dropZone.closest('.k-upload').addClass('k-upload-empty');\n                    }\n                });\n            },\n            _toggleDropZone: function () {\n                var that = this, dropZone = that.options.dropZone;\n                if (!that._supportsDrop()) {\n                    return;\n                }\n                $(dropZone).off(that._ns);\n                $('.k-dropzone', that.wrapper).off(that._ns);\n                if (dropZone !== '') {\n                    that._setupCustomDropZone();\n                } else {\n                    that._setupDropZone();\n                }\n            },\n            _supportsRemove: function () {\n                return !!this.options.async.removeUrl;\n            },\n            _submitRemove: function (fileNames, eventArgs, onSuccess, onError) {\n                var upload = this, removeField = upload.options.async.removeField || 'fileNames', params = $.extend(eventArgs.data, antiForgeryTokens());\n                params[removeField] = fileNames;\n                jQuery.ajax({\n                    type: this.options.async.removeVerb,\n                    dataType: 'json',\n                    dataFilter: normalizeJSON,\n                    url: this.options.async.removeUrl,\n                    traditional: true,\n                    data: params,\n                    headers: eventArgs.headers,\n                    success: onSuccess,\n                    error: onError,\n                    xhrFields: { withCredentials: this.options.async.withCredentials }\n                });\n            },\n            _wrapInput: function (input) {\n                var that = this;\n                var options = that.options;\n                input.wrap('<div class=\\'k-widget k-upload\\'><div class=\\'k-dropzone\\'><div class=\\'k-button k-upload-button\\' aria-label=\\'' + this.localization.select + '\\'></div></div></div>');\n                if (!options.async.saveUrl) {\n                    input.closest('.k-upload').addClass('k-upload-sync');\n                } else {\n                    input.closest('.k-upload').addClass('k-upload-async');\n                }\n                input.closest('.k-upload').addClass('k-upload-empty');\n                input.closest('.k-button').append('<span>' + this.localization.select + '</span>');\n                return input.closest('.k-upload');\n            },\n            _checkAllComplete: function () {\n                if ($('.k-file.k-file-progress', this.wrapper).length === 0) {\n                    this.trigger(COMPLETE);\n                }\n            },\n            _inputFiles: function (sourceInput) {\n                return inputFiles(sourceInput);\n            }\n        });\n        var syncUploadModule = function (upload) {\n            this.name = 'syncUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.element.closest('form').attr('enctype', 'multipart/form-data').attr('encoding', 'multipart/form-data');\n        };\n        syncUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var filesContainErrors = upload._filesContainValidationErrors(files);\n                upload._addInput(sourceInput);\n                var fileData = { 'fileNames': files };\n                if (filesContainErrors) {\n                    sourceInput.remove();\n                } else {\n                    fileData.relatedInput = sourceInput;\n                }\n                var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n                if (filesContainErrors) {\n                    upload._hideUploadProgress(file);\n                }\n                upload._fileAction(file, REMOVE);\n            },\n            onRemove: function (e) {\n                var fileEntry = getFileEntry(e);\n                var relatedInput = fileEntry.data('relatedInput');\n                if (relatedInput) {\n                    relatedInput.remove();\n                }\n                this.upload._removeFileEntry(fileEntry);\n            }\n        };\n        var iframeUploadModule = function (upload) {\n            this.name = 'iframeUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.iframes = [];\n        };\n        Upload._frameId = 0;\n        iframeUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var hasValidationErrors = upload._filesContainValidationErrors(files);\n                var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        this.performUpload(fileEntry);\n                    } else {\n                        upload._fileAction(fileEntry, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n                    if (!hasValidationErrors) {\n                        upload._showActionButtons();\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(fileEntry);\n                }\n            },\n            prepareUpload: function (sourceInput, files, hasValidationErrors) {\n                var upload = this.upload;\n                var activeInput = $(upload.element);\n                var name = upload.options.async.saveField || sourceInput.attr('name');\n                var fileEntry, fileData, iframe, form;\n                upload._addInput(sourceInput);\n                sourceInput.attr('name', name);\n                if (!hasValidationErrors) {\n                    iframe = this.createFrame(upload.name + '_' + Upload._frameId++);\n                    this.registerFrame(iframe);\n                    form = this.createForm(upload.options.async.saveUrl, iframe.attr('name')).append(activeInput);\n                    fileData = {\n                        'frame': iframe,\n                        'relatedInput': activeInput,\n                        'fileNames': files\n                    };\n                } else {\n                    sourceInput.remove();\n                    fileData = { 'fileNames': files };\n                }\n                fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n                if (iframe) {\n                    iframe.data({\n                        'form': form,\n                        'file': fileEntry\n                    });\n                }\n                return fileEntry;\n            },\n            performUpload: function (fileEntry) {\n                var e = { files: fileEntry.data('fileNames') };\n                var iframe = fileEntry.data('frame');\n                var upload = this.upload;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-information');\n                var fileSize = fileEntry.find('.k-file-size');\n                if (!upload.trigger(UPLOAD, e)) {\n                    upload._hideActionButtons();\n                    upload._showHeaderUploadStatus(true);\n                    iframe.appendTo(document.body);\n                    var form = iframe.data('form').attr('action', upload.options.async.saveUrl).appendTo(document.body);\n                    e.data = $.extend({}, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        var dataInput = form.find('input[name=\\'' + key + '\\']');\n                        if (dataInput.length === 0) {\n                            dataInput = $('<input>', {\n                                type: 'hidden',\n                                name: key\n                            }).prependTo(form);\n                        }\n                        dataInput.val(e.data[key]);\n                    }\n                    upload._fileAction(fileEntry, CANCEL);\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n                    iframe.one('load', $.proxy(this.onIframeLoad, this));\n                    form[0].submit();\n                } else {\n                    upload._removeFileEntry(iframe.data('file'));\n                    this.cleanupFrame(iframe);\n                    this.unregisterFrame(iframe);\n                }\n            },\n            onSaveSelected: function () {\n                var module = this;\n                var upload = module.upload;\n                $('.k-file', this.element).each(function () {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data('fileNames'));\n                    if (!started && !hasValidationErrors) {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onIframeLoad: function (e) {\n                var iframe = $(e.target), responseText;\n                try {\n                    responseText = iframe.contents().text();\n                } catch (ex) {\n                    responseText = 'Error trying to get server response: ' + ex;\n                }\n                this.processResponse(iframe, responseText);\n            },\n            processResponse: function (iframe, responseText) {\n                var fileEntry = iframe.data('file'), module = this, fakeXHR = { responseText: responseText };\n                tryParseJSON(responseText, function (jsonResult) {\n                    $.extend(fakeXHR, {\n                        statusText: 'OK',\n                        status: '200'\n                    });\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n                    module.cleanupFrame(iframe);\n                    module.unregisterFrame(iframe);\n                }, function () {\n                    $.extend(fakeXHR, {\n                        statusText: 'error',\n                        status: '500'\n                    });\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                });\n            },\n            onCancel: function (e) {\n                var iframe = $(e.target).data('frame');\n                this.stopFrameSubmit(iframe);\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n                this.upload._removeFileEntry(iframe.data('file'));\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var iframe = fileEntry.data('frame');\n                if (iframe) {\n                    module.unregisterFrame(iframe);\n                    upload._removeFileEntry(fileEntry);\n                    module.cleanupFrame(iframe);\n                } else {\n                    if (fileEntry.hasClass('k-file-success')) {\n                        removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                    } else {\n                        upload._removeFileEntry(fileEntry);\n                    }\n                }\n            },\n            onAbort: function () {\n                var element = this.element, module = this;\n                $.each(this.iframes, function () {\n                    $('input', this.data('form')).appendTo(element);\n                    module.stopFrameSubmit(this[0]);\n                    this.data('form').remove();\n                    this.remove();\n                });\n                this.iframes = [];\n            },\n            createFrame: function (id) {\n                return $('<iframe' + ' name=\\'' + id + '\\'' + ' id=\\'' + id + '\\'' + ' style=\\'display:none;\\' />');\n            },\n            createForm: function (action, target) {\n                return $('<form enctype=\\'multipart/form-data\\' method=\\'POST\\'' + ' action=\\'' + action + '\\'' + ' target=\\'' + target + '\\'' + '/>');\n            },\n            stopFrameSubmit: function (frame) {\n                if (typeof frame.stop != 'undefined') {\n                    frame.stop();\n                } else if (frame.document) {\n                    frame.document.execCommand('Stop');\n                }\n            },\n            registerFrame: function (frame) {\n                this.iframes.push(frame);\n            },\n            unregisterFrame: function (frame) {\n                this.iframes = $.grep(this.iframes, function (value) {\n                    return value.attr('name') != frame.attr('name');\n                });\n            },\n            cleanupFrame: function (frame) {\n                var form = frame.data('form');\n                frame.data('file').data('frame', null);\n                setTimeout(function () {\n                    form.remove();\n                    frame.remove();\n                }, 1);\n            }\n        };\n        var formDataUploadModule = function (upload) {\n            this.name = 'formDataUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.position = {};\n            this.metaData = {};\n            this.cancelled = {};\n            this.resume = {};\n            this.paused = {};\n            this.retries = {};\n        };\n        formDataUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var module = this;\n                var sourceElement = $(e.target);\n                var fileEntries = this.prepareUpload(sourceElement, files);\n                var hasValidationErrors;\n                var prev;\n                $.each(fileEntries, function (index) {\n                    hasValidationErrors = upload._filesContainValidationErrors($(this.data('fileNames')));\n                    if (upload.options.async.autoUpload) {\n                        if (!hasValidationErrors) {\n                            if (upload.options.async.chunkSize) {\n                                module.prepareChunk(this);\n                                prev = this.prev();\n                                if (upload.options.async.concurrent || index === 0 && !prev.length || index === 0 && prev.hasClass('k-file-success')) {\n                                    module.performUpload(this);\n                                }\n                            } else {\n                                module.performUpload(this);\n                            }\n                        } else {\n                            upload._fileAction(this, REMOVE);\n                            upload._showHeaderUploadStatus(false);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n                        if (!hasValidationErrors) {\n                            upload._showActionButtons();\n                            this.addClass('k-toupload');\n                        } else {\n                            upload._updateHeaderUploadStatus();\n                        }\n                    }\n                    if (hasValidationErrors) {\n                        upload._hideUploadProgress(this);\n                    }\n                });\n            },\n            prepareUpload: function (sourceElement, files) {\n                var fileEntries = this.enqueueFiles(files);\n                if (sourceElement.is('input')) {\n                    $.each(fileEntries, function () {\n                        $(this).data('relatedInput', sourceElement);\n                    });\n                    sourceElement.data('relatedFileEntries', fileEntries);\n                    this.upload._addInput(sourceElement);\n                }\n                return fileEntries;\n            },\n            enqueueFiles: function (files) {\n                var upload = this.upload;\n                var name;\n                var i;\n                var filesLength = files.length;\n                var currentFile;\n                var fileEntry;\n                var fileEntries = [];\n                if (upload.options.async.batch === true) {\n                    name = $.map(files, function (file) {\n                        return file.name;\n                    }).join(', ');\n                    if (upload.directory || upload.options.directoryDrop) {\n                        $(files).each(function () {\n                            if (this.rawFile.webkitRelativePath || this.rawFile.relativePath) {\n                                this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath;\n                            }\n                        });\n                    }\n                    fileEntry = upload._enqueueFile(name, { fileNames: files });\n                    fileEntry.data('files', files);\n                    fileEntries.push(fileEntry);\n                } else {\n                    for (i = 0; i < filesLength; i++) {\n                        currentFile = files[i];\n                        name = currentFile.name;\n                        if (upload.directory || upload.options.directoryDrop) {\n                            if (currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath) {\n                                currentFile.name = currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath;\n                            }\n                        }\n                        fileEntry = upload._enqueueFile(name, { fileNames: [currentFile] });\n                        fileEntry.data('files', [currentFile]);\n                        fileEntries.push(fileEntry);\n                    }\n                }\n                return fileEntries;\n            },\n            performUpload: function (fileEntry) {\n                var upload = this.upload, formData = this.createFormData(), xhr = this.createXHR(), e = {\n                        files: fileEntry.data('fileNames'),\n                        XMLHttpRequest: xhr\n                    }, files;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-information');\n                var fileSize = fileEntry.find('.k-file-size');\n                if (!upload.trigger(UPLOAD, e)) {\n                    if (fileEntry.find('.k-i-cancel').length === 0) {\n                        if (upload.options.async.chunkSize) {\n                            upload._fileAction(fileEntry, PAUSE);\n                        }\n                        upload._fileAction(fileEntry, CANCEL, upload.options.async.chunkSize);\n                    }\n                    if (!upload.wrapper.find('.k-toupload').length) {\n                        upload._hideActionButtons();\n                    }\n                    upload._showHeaderUploadStatus(true);\n                    if (e.formData) {\n                        formData = e.formData;\n                    } else {\n                        e.data = $.extend({}, e.data, antiForgeryTokens());\n                        for (var key in e.data) {\n                            formData.append(key, e.data[key]);\n                        }\n                        files = fileEntry.data('files');\n                        if (files) {\n                            this.populateFormData(formData, files);\n                        }\n                    }\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n                    if (upload.options.async.useArrayBuffer && window.FileReader) {\n                        this._readFile(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    } else {\n                        this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    }\n                } else {\n                    this.removeFileEntry(fileEntry);\n                }\n            },\n            _readFile: function (saveUrl, formData, fileEntry, xhr) {\n                var that = this;\n                var upload = that.upload;\n                var file = fileEntry.data('files')[0];\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                    try {\n                        if (!that.fileArrayBuffer) {\n                            that.fileArrayBuffer = e.target.result;\n                        } else {\n                            that.fileArrayBuffer = that._appendBuffer(that.fileArrayBuffer, e.target.result);\n                        }\n                    } catch (err) {\n                        upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                        return;\n                    }\n                    if (that.position[file.uid] > file.size) {\n                        that.postFormData(upload.options.async.saveUrl, that.fileArrayBuffer, fileEntry, xhr);\n                        that.fileArrayBuffer = null;\n                    } else {\n                        that._readFile(saveUrl, formData, fileEntry, xhr);\n                    }\n                };\n                reader.onerror = function () {\n                    upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                };\n                reader.readAsArrayBuffer(that._getCurrentChunk(file.rawFile, file.uid));\n            },\n            _appendBuffer: function (buffer1, buffer2) {\n                var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n                tmp.set(new Uint8Array(buffer1), 0);\n                tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n                return tmp.buffer;\n            },\n            onSaveSelected: function () {\n                var module = this;\n                var upload = module.upload;\n                $('.k-toupload', this.element).filter(function () {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data('fileNames'));\n                    return !started && !hasValidationErrors;\n                }).each(function (index) {\n                    var fileEntry = $(this);\n                    var prevEntry = fileEntry.prev();\n                    fileEntry.removeClass('k-toupload');\n                    if (upload.options.async.chunkSize) {\n                        module.prepareChunk(fileEntry);\n                        if (upload.options.async.concurrent || index === 0 && !prevEntry.length || (index === 0 && prevEntry.hasClass('k-file-success') || prevEntry.hasClass('k-file-error'))) {\n                            module.performUpload(fileEntry);\n                        }\n                    } else {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onCancel: function (e) {\n                var fileEntry = getFileEntry(e);\n                if (this.upload.options.async.chunkSize) {\n                    this.cancelled[fileEntry.data('uid')] = true;\n                }\n                this.stopUploadRequest(fileEntry);\n                this.removeFileEntry(fileEntry);\n            },\n            onPause: function (e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data('uid');\n                var async = this.upload.options.async;\n                if (async.chunkSize) {\n                    this.retries[fileUid] = async.maxAutoRetries + 1;\n                    this.paused[fileUid] = true;\n                    this.resume[fileUid] = false;\n                }\n            },\n            onResume: function (e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data('uid');\n                if (this.upload.options.async.chunkSize) {\n                    delete this.paused[fileUid];\n                    this.resume[fileUid] = true;\n                    this.retries[fileEntry.data('uid')] = 1;\n                    this._increaseChunkIndex(fileUid);\n                    this.performUpload(fileEntry);\n                }\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data('uid')] = async.maxAutoRetries + 1;\n                    delete this.paused[fileEntry.data('uid')];\n                }\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data('uid')] = async.maxAutoRetries + 1;\n                }\n                if (fileEntry.hasClass('k-file-success')) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    module.removeFileEntry(fileEntry);\n                }\n            },\n            createXHR: function () {\n                return new XMLHttpRequest();\n            },\n            postFormData: function (url, data, fileEntry, xhr) {\n                var module = this;\n                fileEntry.data('request', xhr);\n                xhr.addEventListener('load', function (e) {\n                    module.onRequestSuccess.call(module, e, fileEntry);\n                }, false);\n                xhr.addEventListener(ERROR, function (e) {\n                    module.onRequestError.call(module, e, fileEntry);\n                }, false);\n                xhr.upload.addEventListener('progress', function (e) {\n                    module.onRequestProgress.call(module, e, fileEntry);\n                }, false);\n                xhr.open('POST', url, true);\n                xhr.withCredentials = this.upload.options.async.withCredentials;\n                var accept = this.upload.options.async.accept;\n                if (accept) {\n                    xhr.setRequestHeader('Accept', accept);\n                }\n                xhr.send(data);\n            },\n            createFormData: function () {\n                return new FormData();\n            },\n            populateFormData: function (data, files) {\n                var chunk;\n                var i;\n                var length = files.length;\n                var uid;\n                var upload = this.upload;\n                if (upload.options.async.chunkSize) {\n                    uid = files[0].uid;\n                    chunk = this._getCurrentChunk(files[0].rawFile, uid);\n                    data.append(upload.options.async.saveField || upload.name, chunk);\n                    var serializedMetaData = JSON.stringify(this.metaData[uid]);\n                    data.append('metadata', serializedMetaData);\n                } else {\n                    for (i = 0; i < length; i++) {\n                        data.append(upload.options.async.saveField || upload.name, files[i].rawFile);\n                    }\n                }\n                return data;\n            },\n            onRequestSuccess: function (e, fileEntry) {\n                var xhr = e.target, module = this;\n                function raiseError() {\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n                }\n                function parseSuccess(jsonResult) {\n                    var batch = module.upload.options.async.batch;\n                    var chunkSize = module.upload.options.async.chunkSize;\n                    var concurrent = module.upload.options.async.concurrent;\n                    var fileUid = jsonResult.fileUid;\n                    if (module.paused[fileUid] || module.cancelled[fileUid]) {\n                        return;\n                    }\n                    delete module.retries[fileUid];\n                    if (chunkSize && !batch && !jsonResult.uploaded) {\n                        module._increaseChunkIndex(fileUid);\n                        module.performUpload(fileEntry);\n                    } else if (chunkSize && !batch && !concurrent && fileEntry.next().length && !fileEntry.next().hasClass('k-toupload')) {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module._resetChunkIndex(fileUid);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.performUpload(fileEntry.next());\n                    } else {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.cleanupFileEntry(fileEntry);\n                    }\n                }\n                if (xhr.status >= 200 && xhr.status <= 299) {\n                    tryParseJSON(xhr.responseText, parseSuccess, raiseError);\n                } else {\n                    raiseError();\n                }\n            },\n            onRequestError: function (e, fileEntry) {\n                var xhr = e.target;\n                this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n            },\n            cleanupFileEntry: function (fileEntry) {\n                var relatedInput = fileEntry.data('relatedInput'), uploadComplete = true;\n                if (relatedInput) {\n                    $.each(relatedInput.data('relatedFileEntries') || [], function () {\n                        if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                            uploadComplete = uploadComplete && this.hasClass('k-file-success');\n                        }\n                    });\n                    if (uploadComplete) {\n                        relatedInput.remove();\n                    }\n                }\n            },\n            removeFileEntry: function (fileEntry) {\n                var chunkSize = this.upload.options.async.chunkSize;\n                var concurrent = this.upload.options.async.concurrent;\n                var isUploadButtonVisible = this.upload.wrapper.find('.k-upload-selected').length > 0;\n                this.cleanupFileEntry(fileEntry);\n                if (chunkSize && !concurrent && !isUploadButtonVisible) {\n                    if (fileEntry.next().length) {\n                        this.performUpload(fileEntry.next());\n                    }\n                }\n                this.upload._removeFileEntry(fileEntry);\n            },\n            onRequestProgress: function (e, fileEntry) {\n                var percentComplete = Math.round(e.loaded * 100 / e.total);\n                var fileUid = fileEntry.data('uid');\n                var fileMetaData;\n                if (this.upload.options.async.chunkSize) {\n                    fileMetaData = this.metaData[fileUid];\n                    percentComplete = fileMetaData && fileMetaData.totalChunks ? Math.round(fileMetaData.chunkIndex / fileMetaData.totalChunks * 100) : 100;\n                }\n                this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n            },\n            stopUploadRequest: function (fileEntry) {\n                fileEntry.data('request').abort();\n            },\n            prepareChunk: function (fileEntry) {\n                var file = fileEntry.data('files')[0];\n                var rawFile = file.rawFile;\n                var uid = file.uid;\n                var chunkSize = this.upload.options.async.chunkSize;\n                this.position[uid] = 0;\n                this.metaData[uid] = {\n                    chunkIndex: 0,\n                    contentType: rawFile.type,\n                    fileName: rawFile.name,\n                    relativePath: file.name,\n                    totalFileSize: rawFile.size,\n                    totalChunks: Math.ceil(rawFile.size / chunkSize),\n                    uploadUid: uid\n                };\n            },\n            _decreaseChunkIndex: function (uid) {\n                this.metaData[uid].chunkIndex--;\n            },\n            _increaseChunkIndex: function (uid) {\n                this.metaData[uid].chunkIndex++;\n            },\n            _resetChunkIndex: function (uid) {\n                this.metaData[uid].chunkIndex = 0;\n            },\n            _decreasePosition: function (uid) {\n                this.position[uid] -= this.upload.options.async.chunkSize;\n            },\n            _getCurrentChunk: function (file, uid) {\n                var oldPosition = this.position[uid];\n                var methodToInvoke;\n                var async = this.upload.options.async;\n                var chunkSize = async.chunkSize || async.bufferChunkSize;\n                if (!this.position[uid]) {\n                    this.position[uid] = 0;\n                }\n                this.position[uid] += chunkSize;\n                if (!!(methodToInvoke = this._getChunker(file))) {\n                    return file[methodToInvoke](oldPosition, this.position[uid]);\n                } else {\n                    return file;\n                }\n            },\n            _getChunker: function (file) {\n                if (file.slice) {\n                    return 'slice';\n                } else if (file.mozSlice) {\n                    return 'mozSlice';\n                } else if (file.webkitSlice) {\n                    return 'webkitSlice';\n                } else {\n                    return null;\n                }\n            }\n        };\n        function getFileName(input) {\n            return $.map(inputFiles(input), function (file) {\n                return file.name;\n            }).join(', ');\n        }\n        function inputFiles($input) {\n            var input = $input[0];\n            if (input.files) {\n                return getAllFileInfo(input.files);\n            } else {\n                return [{\n                        name: stripPath(input.value),\n                        extension: getFileExtension(input.value),\n                        size: null\n                    }];\n            }\n        }\n        function getAllFileInfo(rawFiles) {\n            return $.map(rawFiles, function (file) {\n                return getFileInfo(file);\n            });\n        }\n        function getFileInfo(rawFile) {\n            var fileName = rawFile.name || rawFile.fileName;\n            return {\n                name: kendo.htmlEncode(fileName),\n                extension: getFileExtension(fileName),\n                size: typeof rawFile.size == 'number' ? rawFile.size : rawFile.fileSize,\n                rawFile: rawFile\n            };\n        }\n        function getFileExtension(fileName) {\n            var matches = fileName.match(rFileExtension);\n            return matches ? matches[0] : '';\n        }\n        function stripPath(name) {\n            var slashIndex = name.lastIndexOf('\\\\');\n            return slashIndex != -1 ? name.substr(slashIndex + 1) : name;\n        }\n        function assignGuidToFiles(files, unique) {\n            var uid = kendo.guid();\n            return $.map(files, function (file) {\n                file.uid = unique ? kendo.guid() : uid;\n                return file;\n            });\n        }\n        function validateFiles(files, validationInfo) {\n            var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n            var maxFileSize = validationInfo.maxFileSize;\n            var minFileSize = validationInfo.minFileSize;\n            for (var i = 0; i < files.length; i++) {\n                validateFileExtension(files[i], allowedExtensions);\n                validateFileSize(files[i], minFileSize, maxFileSize);\n            }\n        }\n        function parseAllowedExtensions(extensions) {\n            var allowedExtensions = $.map(extensions, function (ext) {\n                var parsedExt = ext.substring(0, 1) === '.' ? ext : '.' + ext;\n                return parsedExt.toLowerCase();\n            });\n            return allowedExtensions;\n        }\n        function validateFileExtension(file, allowedExtensions) {\n            if (allowedExtensions.length > 0) {\n                if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                    file.validationErrors = file.validationErrors || [];\n                    if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                        file.validationErrors.push(INVALIDFILEEXTENSION);\n                    }\n                }\n            }\n        }\n        function validateFileSize(file, minFileSize, maxFileSize) {\n            if (minFileSize !== 0 && file.size < minFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMINFILESIZE);\n                }\n            }\n            if (maxFileSize !== 0 && file.size > maxFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMAXFILESIZE);\n                }\n            }\n        }\n        function getTotalFilesSizeMessage(files) {\n            var totalSize = 0;\n            if (typeof files[0].size == 'number') {\n                for (var i = 0; i < files.length; i++) {\n                    if (files[i].size) {\n                        totalSize += files[i].size;\n                    }\n                }\n            } else {\n                return '';\n            }\n            totalSize /= 1024;\n            if (totalSize < 1024) {\n                return totalSize.toFixed(2) + ' KB';\n            } else {\n                return (totalSize / 1024).toFixed(2) + ' MB';\n            }\n        }\n        function shouldRemoveFileEntry(upload) {\n            return !upload.multiple && $('.k-file', upload.wrapper).length > 1;\n        }\n        function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n            if (!upload._supportsRemove()) {\n                if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                return;\n            }\n            var files = fileEntry.data('fileNames');\n            var fileNames = $.map(files, function (file) {\n                return file.name;\n            });\n            if (shouldSendRemoveRequest === false) {\n                upload._removeFileEntry(fileEntry);\n                return;\n            }\n            upload._submitRemove(fileNames, eventArgs, function onSuccess(data, textStatus, xhr) {\n                var prevented = upload.trigger(SUCCESS, {\n                    operation: 'remove',\n                    files: files,\n                    response: data,\n                    XMLHttpRequest: xhr\n                });\n                if (!prevented) {\n                    upload._removeFileEntry(fileEntry);\n                }\n            }, function onError(xhr) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                upload.trigger(ERROR, {\n                    operation: 'remove',\n                    files: files,\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n            });\n        }\n        function tryParseJSON(input, onSuccess, onError) {\n            var success = false, json = '';\n            try {\n                json = $.parseJSON(normalizeJSON(input));\n                success = true;\n            } catch (e) {\n                onError();\n            }\n            if (success) {\n                onSuccess(json);\n            }\n        }\n        function normalizeJSON(input) {\n            if (typeof input === 'undefined' || input === '') {\n                input = '{}';\n            }\n            return input;\n        }\n        function stopEvent(e) {\n            if (e.originalEvent) {\n                e.originalEvent.dataTransfer.dropEffect = 'copy';\n            }\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n            var hideInterval, lastDrag;\n            element.on('dragenter' + namespace, function (e) {\n                onDragEnter(e);\n                lastDrag = new Date();\n                if (!hideInterval) {\n                    hideInterval = setInterval(function () {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            }).on('dragover' + namespace, function () {\n                lastDrag = new Date();\n            });\n        }\n        function isFileUploadStarted(fileEntry) {\n            return fileEntry.is('.k-file-progress, .k-file-success, .k-file-error');\n        }\n        function getFileEntry(e) {\n            return $(e.target).closest('.k-file');\n        }\n        kendo.ui.plugin(Upload);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}